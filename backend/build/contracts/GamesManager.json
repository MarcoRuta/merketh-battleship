{
  "contractName": "GamesManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Game",
          "name": "game",
          "type": "address"
        }
      ],
      "name": "JoinGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract Game",
          "name": "game",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "small",
          "type": "bool"
        }
      ],
      "name": "NewGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "NoGame",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_small",
          "type": "bool"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Game",
          "name": "_game",
          "type": "address"
        }
      ],
      "name": "joinGameByID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinRandomGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Game\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"JoinGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Game\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"small\",\"type\":\"bool\"}],\"name\":\"NewGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"NoGame\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_small\",\"type\":\"bool\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Game\",\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"joinGameByID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinRandomGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"NewGame(address,address,bool)\":{\"notice\":\"EVENTS///\"}},\"kind\":\"user\",\"methods\":{\"createGame(bool)\":{\"notice\":\"FUNCTIONS///\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GamesManager.sol\":\"GamesManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"project:/contracts/Game.sol\":{\"keccak256\":\"0x127e0bffe1f80ec99c1194e187ef8054822827a070ada435c9aacd9fb9fd04c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368e850b37c90c3abb96bed9ab50b617bead89e9cd910784aabd1ce956935793\",\"dweb:/ipfs/QmbvXZXHmbQRjPjKMJkbj1nsdTVqWyC23Ty2euviVXbJvZ\"]},\"project:/contracts/GamesManager.sol\":{\"keccak256\":\"0x1adc4d591c1a1a601f1ef6933eb8253be8820a4f0874f1cd03f30b02d67c78f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fea89b25433cc957bc3bbceca599bdec147d5939d7fc531b506e8cced3e0735c\",\"dweb:/ipfs/QmPRRHch22AbUMw1irac3AznBsigcESE6dTDgQNrx1hgmM\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10873:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:3",
                "type": ""
              }
            ],
            "src": "466:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "626:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "636:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "665:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "647:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "636:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "608:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "618:7:3",
                "type": ""
              }
            ],
            "src": "568:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "739:92:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "821:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "762:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "800:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Game_$1778",
                              "nodeType": "YulIdentifier",
                              "src": "769:30:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "769:37:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "759:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "759:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:56:3"
                  },
                  "nodeType": "YulIf",
                  "src": "749:76:3"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "732:5:3",
                "type": ""
              }
            ],
            "src": "683:148:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:100:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "912:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "921:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "912:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "990:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Game_$1778",
                      "nodeType": "YulIdentifier",
                      "src": "950:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:46:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:46:3"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "880:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "888:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:3",
                "type": ""
              }
            ],
            "src": "837:165:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1087:276:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1133:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1135:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1135:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1135:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1108:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1117:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1104:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1129:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1100:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1097:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1226:130:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1241:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1245:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1270:76:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1318:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1329:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1314:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1314:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1338:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Game_$1778",
                          "nodeType": "YulIdentifier",
                          "src": "1280:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1280:66:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1270:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1068:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1080:6:3",
                "type": ""
              }
            ],
            "src": "1008:355:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1411:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1421:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1446:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1439:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1432:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1421:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1393:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1403:7:3",
                "type": ""
              }
            ],
            "src": "1369:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:76:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1559:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1568:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1571:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1561:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1561:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1561:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1528:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1550:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "1535:14:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1535:21:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1525:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1525:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:40:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1515:60:3"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1498:5:3",
                "type": ""
              }
            ],
            "src": "1465:116:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1636:84:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1646:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1668:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1655:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1646:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1708:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1684:23:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1684:30:3"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1614:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1622:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1630:5:3",
                "type": ""
              }
            ],
            "src": "1587:133:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:260:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1835:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1837:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1837:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1837:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1810:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1819:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1806:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1806:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1831:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1802:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1799:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1928:114:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1943:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1957:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1947:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1972:60:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2004:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2015:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2000:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2000:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2024:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1982:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:50:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1972:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1759:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1770:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1782:6:3",
                "type": ""
              }
            ],
            "src": "1726:323:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2151:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2168:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2173:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2161:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2161:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2161:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2189:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2208:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2213:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2204:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2189:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2123:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2128:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2139:11:3",
                "type": ""
              }
            ],
            "src": "2055:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2336:71:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2358:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2366:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2354:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2354:14:3"
                      },
                      {
                        "hexValue": "546869732067616d65206973206e6f7420617661696c61626c6521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2370:29:3",
                        "type": "",
                        "value": "This game is not available!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2347:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2347:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2347:53:3"
                }
              ]
            },
            "name": "store_literal_in_memory_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2328:6:3",
                "type": ""
              }
            ],
            "src": "2230:177:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2559:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2569:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2635:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2640:2:3",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2576:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2576:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2569:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2741:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e",
                      "nodeType": "YulIdentifier",
                      "src": "2652:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2652:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2754:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2765:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2770:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2761:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2754:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2547:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2555:3:3",
                "type": ""
              }
            ],
            "src": "2413:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2956:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2966:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2978:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2989:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2974:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2974:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2966:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3013:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3024:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3009:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3009:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3032:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3038:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3028:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3028:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3002:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3002:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3058:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3192:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3066:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3066:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3058:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2936:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2951:4:3",
                "type": ""
              }
            ],
            "src": "2785:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3253:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3310:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3319:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3322:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3312:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3312:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3312:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3276:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3301:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3283:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3283:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3273:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3273:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3266:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "3263:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3246:5:3",
                "type": ""
              }
            ],
            "src": "3210:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3401:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3411:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3426:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3420:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3420:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3411:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3469:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3442:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3442:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3442:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3379:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3387:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3395:5:3",
                "type": ""
              }
            ],
            "src": "3338:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3564:274:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3610:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3612:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3612:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3612:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3585:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3594:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3581:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3581:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3606:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3577:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3577:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "3574:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3703:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3718:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3732:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3722:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3747:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3793:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3804:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3789:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3789:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3813:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3757:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3747:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3534:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3545:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3557:6:3",
                "type": ""
              }
            ],
            "src": "3487:351:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3950:71:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3972:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3980:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3968:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:14:3"
                      },
                      {
                        "hexValue": "596f752063616e6e6f74206a6f696e2074686973206d6174636821",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3984:29:3",
                        "type": "",
                        "value": "You cannot join this match!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3961:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3961:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3961:53:3"
                }
              ]
            },
            "name": "store_literal_in_memory_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3942:6:3",
                "type": ""
              }
            ],
            "src": "3844:177:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4173:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4183:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4249:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4254:2:3",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4190:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4190:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4183:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4355:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c",
                      "nodeType": "YulIdentifier",
                      "src": "4266:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4266:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4368:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4379:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4384:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4375:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4375:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4368:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4161:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4169:3:3",
                "type": ""
              }
            ],
            "src": "4027:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4570:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4580:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4592:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4603:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4588:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4588:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4580:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4627:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4638:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4623:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4623:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4646:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4652:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4642:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4642:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4616:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4616:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4616:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4672:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4806:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4680:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4680:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4672:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4550:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4565:4:3",
                "type": ""
              }
            ],
            "src": "4399:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4889:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4906:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4929:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4911:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4911:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4899:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4899:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4899:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4877:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4884:3:3",
                "type": ""
              }
            ],
            "src": "4824:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5046:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5056:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5068:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5064:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5064:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5056:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5136:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5149:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5160:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5145:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5145:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5092:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5092:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5092:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5018:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5030:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5041:4:3",
                "type": ""
              }
            ],
            "src": "4948:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5282:118:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5304:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5312:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5300:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5300:14:3"
                      },
                      {
                        "hexValue": "5468657265206973206e6f206176616961626c652067616d652c20747279206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5316:34:3",
                        "type": "",
                        "value": "There is no avaiable game, try l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5293:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5293:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5293:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5372:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5380:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5368:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5368:15:3"
                      },
                      {
                        "hexValue": "6174657221",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5385:7:3",
                        "type": "",
                        "value": "ater!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5361:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5361:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5361:32:3"
                }
              ]
            },
            "name": "store_literal_in_memory_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5274:6:3",
                "type": ""
              }
            ],
            "src": "5176:224:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5552:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5562:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5628:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5633:2:3",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5569:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5569:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5562:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5734:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0",
                      "nodeType": "YulIdentifier",
                      "src": "5645:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5645:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5645:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5747:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5758:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5763:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5754:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5754:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5747:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5540:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5548:3:3",
                "type": ""
              }
            ],
            "src": "5406:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5949:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5959:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5971:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5982:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5967:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5967:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5959:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6006:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6017:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6002:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6002:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6025:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6031:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6021:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6021:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5995:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5995:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5995:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6051:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6185:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6059:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6059:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6051:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5929:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5944:4:3",
                "type": ""
              }
            ],
            "src": "5778:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6248:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6258:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6269:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6258:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6230:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6240:7:3",
                "type": ""
              }
            ],
            "src": "6203:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6314:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6331:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6334:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6324:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6324:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6324:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6428:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6431:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6421:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6421:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6452:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6455:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6445:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6445:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6445:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6286:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6517:149:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6527:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6550:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6532:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6527:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6561:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6584:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6566:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6561:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6595:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6607:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6610:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6603:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6595:4:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6637:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6639:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6639:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6639:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6628:4:3"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6634:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6625:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6625:11:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6622:37:3"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6503:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6506:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6512:4:3",
                "type": ""
              }
            ],
            "src": "6472:194:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6717:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6727:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6738:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6727:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6699:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6709:7:3",
                "type": ""
              }
            ],
            "src": "6672:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6802:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6812:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6823:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "6812:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6784:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "6794:7:3",
                "type": ""
              }
            ],
            "src": "6755:79:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6923:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6940:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6983:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "6965:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6965:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6945:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6945:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6933:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6933:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6933:58:3"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6911:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6918:3:3",
                "type": ""
              }
            ],
            "src": "6840:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7045:52:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7055:35:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7080:2:3",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7084:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7076:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7076:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7055:8:3"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7026:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7036:8:3",
                "type": ""
              }
            ],
            "src": "7003:94:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7150:47:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7160:31:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7185:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7171:13:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7171:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7160:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7132:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7142:7:3",
                "type": ""
              }
            ],
            "src": "7103:94:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7250:53:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7260:37:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7291:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7271:19:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7271:26:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7260:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7232:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7242:7:3",
                "type": ""
              }
            ],
            "src": "7203:100:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7392:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7409:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7452:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7434:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7434:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7414:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7414:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7402:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7402:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7402:58:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7380:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7387:3:3",
                "type": ""
              }
            ],
            "src": "7309:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7519:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7529:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7540:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7529:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7501:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7511:7:3",
                "type": ""
              }
            ],
            "src": "7472:79:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7640:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7657:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7700:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7682:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7682:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7662:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7662:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7650:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7650:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7650:58:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7628:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7635:3:3",
                "type": ""
              }
            ],
            "src": "7557:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7892:366:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7965:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7974:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7903:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7903:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7903:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7987:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7998:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8003:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7994:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7994:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7987:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8078:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8087:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8016:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8016:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8016:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8100:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8111:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8116:2:3",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8107:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8107:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8100:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8191:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8200:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8129:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8129:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8213:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8224:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8229:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8220:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8220:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8213:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8242:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8249:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8242:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7855:3:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7861:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7869:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7877:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7888:3:3",
                "type": ""
              }
            ],
            "src": "7720:538:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8292:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8309:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8312:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8302:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8302:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8302:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8406:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8409:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8399:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8399:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8399:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8430:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8433:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8423:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8423:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8423:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "8264:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8484:142:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8494:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8517:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8499:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8499:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8494:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8528:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8551:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8533:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8533:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8528:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8575:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "8577:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8577:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8577:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8572:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8565:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8565:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "8562:35:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8606:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8615:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8618:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "8611:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8611:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8606:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8473:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8476:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8482:1:3",
                "type": ""
              }
            ],
            "src": "8450:176:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8675:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8685:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8712:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8694:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8694:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8685:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8808:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8810:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8810:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8810:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8733:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8740:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8730:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8730:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "8727:103:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8839:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8850:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8857:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8846:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8846:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8839:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8661:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8671:3:3",
                "type": ""
              }
            ],
            "src": "8632:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8899:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8916:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8919:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8909:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8909:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8909:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9013:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9016:4:3",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9006:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9006:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9006:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9037:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9040:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9030:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9030:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9030:15:3"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "8871:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9116:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9133:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9153:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "9138:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9138:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9126:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9126:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9126:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9104:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9111:3:3",
                "type": ""
              }
            ],
            "src": "9057:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9292:200:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9302:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9314:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9325:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9310:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9310:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9302:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9382:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9395:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9406:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9391:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9391:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9338:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9338:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9338:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9457:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9470:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9481:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9466:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9466:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9419:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9419:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9419:66:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9256:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9268:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9276:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9287:4:3",
                "type": ""
              }
            ],
            "src": "9172:320:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9530:28:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9540:12:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9547:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9540:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9516:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9526:3:3",
                "type": ""
              }
            ],
            "src": "9498:60:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9624:82:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9634:66:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9692:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "9674:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9674:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "9665:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9665:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9647:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9647:53:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9634:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9604:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9614:9:3",
                "type": ""
              }
            ],
            "src": "9564:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9772:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9782:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9826:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9795:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9795:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9782:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9752:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9762:9:3",
                "type": ""
              }
            ],
            "src": "9712:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9917:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9927:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9971:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9940:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9940:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9927:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Game_$1778_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9897:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9907:9:3",
                "type": ""
              }
            ],
            "src": "9844:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10067:79:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10084:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10133:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Game_$1778_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10089:43:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10089:50:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10077:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10077:63:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10077:63:3"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Game_$1778_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10055:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10062:3:3",
                "type": ""
              }
            ],
            "src": "9989:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10285:213:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10295:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10307:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10318:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10303:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10303:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10295:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10388:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10401:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10412:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10397:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10397:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Game_$1778_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10331:56:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10331:84:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10331:84:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10463:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10476:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10487:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10472:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10472:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10425:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10425:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10425:66:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Game_$1778_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10249:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10261:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10269:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10280:4:3",
                "type": ""
              }
            ],
            "src": "10152:346:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10532:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10549:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10552:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10542:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10542:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10542:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10646:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10649:4:3",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10639:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10639:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10639:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10670:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10673:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10663:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10663:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10663:15:3"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "10504:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10718:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10735:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10738:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10728:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10728:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10728:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10832:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10835:4:3",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10825:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10825:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10825:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10856:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10859:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10849:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10849:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10849:15:3"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "10690:180:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Game_$1778(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Game_$1778(value) {\n        if iszero(eq(value, cleanup_t_contract$_Game_$1778(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Game_$1778(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Game_$1778(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Game_$1778(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Game_$1778(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e(memPtr) {\n\n        mstore(add(memPtr, 0), \"This game is not available!\")\n\n    }\n\n    function abi_encode_t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot join this match!\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is no avaiable game, try l\")\n\n        mstore(add(memPtr, 32), \"ater!\")\n\n    }\n\n    function abi_encode_t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Game_$1778_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Game_$1778_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Game_$1778_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Game_$1778_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_Game_$1778_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "87:4085:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "87:4085:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:611;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2009:1165;;;:::i;:::-;;1017:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1392:611;1537:4;1510:31;;:16;:23;1527:5;1510:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1502:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1667:5;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1653:27;;:10;:27;;;1644:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1765:5;:15;;;1781:10;1765:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1859:18;1871:5;1859:11;:18::i;:::-;1990:5;1969:27;;1978:10;1969:27;;;;;;;;;;;;1392:611;:::o;2009:1165::-;2085:1;2062:13;:20;;;;:24;2054:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:14;2334:13;:20;;;;2298:1;2283:12;:16;;;;:::i;:::-;2273:27;2302:10;2314:5;;2256:64;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2246:75;;;;;;2225:106;;:129;;;;:::i;:::-;2208:146;;2393:5;;:7;;;;;;;;;:::i;:::-;;;;;;2481:10;2514:9;2526:6;2514:18;;2509:614;2538:13;:20;;;;2534:1;:24;2509:614;;;2580:9;2592:13;2611;:20;;;;2607:1;:24;;;;:::i;:::-;2592:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2580:53;;2720:10;2704:26;;:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;2700:413;;2758:4;2750:12;;2828:4;:14;;;2843:10;2828:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:17;2945:4;2933:11;:17::i;:::-;3070:4;3049:26;;3058:10;3049:26;;;;;;;;;;;;3093:5;;;2700:413;2565:558;2560:3;;;;;:::i;:::-;;;;2509:614;;;;3137:5;3132:35;;3156:10;3149:18;;;;;;;;;;;;3132:35;2044:1130;;2009:1165::o;1017:304::-;1098:12;1122:10;1134:6;1113:28;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1098:43;;1178:17;1187:7;1178:8;:17::i;:::-;1286:10;1278:36;;;1298:7;1307:6;1278:36;;;;;;;:::i;:::-;;;;;;;;1059:262;1017:304;:::o;3290:642::-;3377:4;3350:31;;:16;:23;3367:5;3350:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;3343:39;;;;:::i;:::-;;3422:1;3399:13;:20;;;;:24;3392:32;;;;:::i;:::-;;3441:16;:23;3458:5;3441:23;;;;;;;;;;;;;;;;3434:30;;;;;;;;;;;3476:13;3492:20;:27;3513:5;3492:27;;;;;;;;;;;;;;;;3476:43;;3607:1;3583:13;:20;;;;:25;:62;;;;3644:1;3621:13;:20;;;;:24;;;;:::i;:::-;3612:5;:33;3583:62;3579:302;;;3661:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3579:302;;;3734:13;3771:1;3748:13;:20;;;;:24;;;;:::i;:::-;3734:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3711:13;3725:5;3711:20;;;;;;;;:::i;:::-;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;3787:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3865:5;3820:20;:42;3841:13;3855:5;3841:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3820:42;;;;;;;;;;;;;;;:50;;;;3579:302;3898:20;:27;3919:5;3898:27;;;;;;;;;;;;;;;3891:34;;;3332:600;3290:642;:::o;3983:185::-;4058:4;4032:16;:23;4049:5;4032:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4072:13;4091:5;4072:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4160:1;4137:13;:20;;;;:24;;;;:::i;:::-;4107:20;:27;4128:5;4107:27;;;;;;;;;;;;;;;:54;;;;3983:185;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:165::-;896:5;934:6;921:20;912:29;;950:46;990:5;950:46;:::i;:::-;837:165;;;;:::o;1008:355::-;1080:6;1129:2;1117:9;1108:7;1104:23;1100:32;1097:119;;;1135:79;;:::i;:::-;1097:119;1255:1;1280:66;1338:7;1329:6;1318:9;1314:22;1280:66;:::i;:::-;1270:76;;1226:130;1008:355;;;;:::o;1369:90::-;1403:7;1446:5;1439:13;1432:21;1421:32;;1369:90;;;:::o;1465:116::-;1535:21;1550:5;1535:21;:::i;:::-;1528:5;1525:32;1515:60;;1571:1;1568;1561:12;1515:60;1465:116;:::o;1587:133::-;1630:5;1668:6;1655:20;1646:29;;1684:30;1708:5;1684:30;:::i;:::-;1587:133;;;;:::o;1726:323::-;1782:6;1831:2;1819:9;1810:7;1806:23;1802:32;1799:119;;;1837:79;;:::i;:::-;1799:119;1957:1;1982:50;2024:7;2015:6;2004:9;2000:22;1982:50;:::i;:::-;1972:60;;1928:114;1726:323;;;;:::o;2055:169::-;2139:11;2173:6;2168:3;2161:19;2213:4;2208:3;2204:14;2189:29;;2055:169;;;;:::o;2230:177::-;2370:29;2366:1;2358:6;2354:14;2347:53;2230:177;:::o;2413:366::-;2555:3;2576:67;2640:2;2635:3;2576:67;:::i;:::-;2569:74;;2652:93;2741:3;2652:93;:::i;:::-;2770:2;2765:3;2761:12;2754:19;;2413:366;;;:::o;2785:419::-;2951:4;2989:2;2978:9;2974:18;2966:26;;3038:9;3032:4;3028:20;3024:1;3013:9;3009:17;3002:47;3066:131;3192:4;3066:131;:::i;:::-;3058:139;;2785:419;;;:::o;3210:122::-;3283:24;3301:5;3283:24;:::i;:::-;3276:5;3273:35;3263:63;;3322:1;3319;3312:12;3263:63;3210:122;:::o;3338:143::-;3395:5;3426:6;3420:13;3411:22;;3442:33;3469:5;3442:33;:::i;:::-;3338:143;;;;:::o;3487:351::-;3557:6;3606:2;3594:9;3585:7;3581:23;3577:32;3574:119;;;3612:79;;:::i;:::-;3574:119;3732:1;3757:64;3813:7;3804:6;3793:9;3789:22;3757:64;:::i;:::-;3747:74;;3703:128;3487:351;;;;:::o;3844:177::-;3984:29;3980:1;3972:6;3968:14;3961:53;3844:177;:::o;4027:366::-;4169:3;4190:67;4254:2;4249:3;4190:67;:::i;:::-;4183:74;;4266:93;4355:3;4266:93;:::i;:::-;4384:2;4379:3;4375:12;4368:19;;4027:366;;;:::o;4399:419::-;4565:4;4603:2;4592:9;4588:18;4580:26;;4652:9;4646:4;4642:20;4638:1;4627:9;4623:17;4616:47;4680:131;4806:4;4680:131;:::i;:::-;4672:139;;4399:419;;;:::o;4824:118::-;4911:24;4929:5;4911:24;:::i;:::-;4906:3;4899:37;4824:118;;:::o;4948:222::-;5041:4;5079:2;5068:9;5064:18;5056:26;;5092:71;5160:1;5149:9;5145:17;5136:6;5092:71;:::i;:::-;4948:222;;;;:::o;5176:224::-;5316:34;5312:1;5304:6;5300:14;5293:58;5385:7;5380:2;5372:6;5368:15;5361:32;5176:224;:::o;5406:366::-;5548:3;5569:67;5633:2;5628:3;5569:67;:::i;:::-;5562:74;;5645:93;5734:3;5645:93;:::i;:::-;5763:2;5758:3;5754:12;5747:19;;5406:366;;;:::o;5778:419::-;5944:4;5982:2;5971:9;5967:18;5959:26;;6031:9;6025:4;6021:20;6017:1;6006:9;6002:17;5995:47;6059:131;6185:4;6059:131;:::i;:::-;6051:139;;5778:419;;;:::o;6203:77::-;6240:7;6269:5;6258:16;;6203:77;;;:::o;6286:180::-;6334:77;6331:1;6324:88;6431:4;6428:1;6421:15;6455:4;6452:1;6445:15;6472:194;6512:4;6532:20;6550:1;6532:20;:::i;:::-;6527:25;;6566:20;6584:1;6566:20;:::i;:::-;6561:25;;6610:1;6607;6603:9;6595:17;;6634:1;6628:4;6625:11;6622:37;;;6639:18;;:::i;:::-;6622:37;6472:194;;;;:::o;6672:77::-;6709:7;6738:5;6727:16;;6672:77;;;:::o;6755:79::-;6794:7;6823:5;6812:16;;6755:79;;;:::o;6840:157::-;6945:45;6965:24;6983:5;6965:24;:::i;:::-;6945:45;:::i;:::-;6940:3;6933:58;6840:157;;:::o;7003:94::-;7036:8;7084:5;7080:2;7076:14;7055:35;;7003:94;;;:::o;7103:::-;7142:7;7171:20;7185:5;7171:20;:::i;:::-;7160:31;;7103:94;;;:::o;7203:100::-;7242:7;7271:26;7291:5;7271:26;:::i;:::-;7260:37;;7203:100;;;:::o;7309:157::-;7414:45;7434:24;7452:5;7434:24;:::i;:::-;7414:45;:::i;:::-;7409:3;7402:58;7309:157;;:::o;7472:79::-;7511:7;7540:5;7529:16;;7472:79;;;:::o;7557:157::-;7662:45;7682:24;7700:5;7682:24;:::i;:::-;7662:45;:::i;:::-;7657:3;7650:58;7557:157;;:::o;7720:538::-;7888:3;7903:75;7974:3;7965:6;7903:75;:::i;:::-;8003:2;7998:3;7994:12;7987:19;;8016:75;8087:3;8078:6;8016:75;:::i;:::-;8116:2;8111:3;8107:12;8100:19;;8129:75;8200:3;8191:6;8129:75;:::i;:::-;8229:2;8224:3;8220:12;8213:19;;8249:3;8242:10;;7720:538;;;;;;:::o;8264:180::-;8312:77;8309:1;8302:88;8409:4;8406:1;8399:15;8433:4;8430:1;8423:15;8450:176;8482:1;8499:20;8517:1;8499:20;:::i;:::-;8494:25;;8533:20;8551:1;8533:20;:::i;:::-;8528:25;;8572:1;8562:35;;8577:18;;:::i;:::-;8562:35;8618:1;8615;8611:9;8606:14;;8450:176;;;;:::o;8632:233::-;8671:3;8694:24;8712:5;8694:24;:::i;:::-;8685:33;;8740:66;8733:5;8730:77;8727:103;;8810:18;;:::i;:::-;8727:103;8857:1;8850:5;8846:13;8839:20;;8632:233;;;:::o;8871:180::-;8919:77;8916:1;8909:88;9016:4;9013:1;9006:15;9040:4;9037:1;9030:15;9057:109;9138:21;9153:5;9138:21;:::i;:::-;9133:3;9126:34;9057:109;;:::o;9172:320::-;9287:4;9325:2;9314:9;9310:18;9302:26;;9338:71;9406:1;9395:9;9391:17;9382:6;9338:71;:::i;:::-;9419:66;9481:2;9470:9;9466:18;9457:6;9419:66;:::i;:::-;9172:320;;;;;:::o;9498:60::-;9526:3;9547:5;9540:12;;9498:60;;;:::o;9564:142::-;9614:9;9647:53;9665:34;9674:24;9692:5;9674:24;:::i;:::-;9665:34;:::i;:::-;9647:53;:::i;:::-;9634:66;;9564:142;;;:::o;9712:126::-;9762:9;9795:37;9826:5;9795:37;:::i;:::-;9782:50;;9712:126;;;:::o;9844:139::-;9907:9;9940:37;9971:5;9940:37;:::i;:::-;9927:50;;9844:139;;;:::o;9989:157::-;10089:50;10133:5;10089:50;:::i;:::-;10084:3;10077:63;9989:157;;:::o;10152:346::-;10280:4;10318:2;10307:9;10303:18;10295:26;;10331:84;10412:1;10401:9;10397:17;10388:6;10331:84;:::i;:::-;10425:66;10487:2;10476:9;10472:18;10463:6;10425:66;:::i;:::-;10152:346;;;;;:::o;10504:180::-;10552:77;10549:1;10542:88;10649:4;10646:1;10639:15;10673:4;10670:1;10663:15;10690:180;10738:77;10735:1;10728:88;10835:4;10832:1;10825:15;10859:4;10856:1;10849:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./Game.sol\";\n\ncontract GamesManager{\n    // Maps Games that are joinable.\n    mapping(Game => bool) private joinableGamesMap;\n\n    // Addresses of the Games that are joinable.\n    Game[] private joinableGames;\n\n    // Mapping that keeps index of the joinable games.\n    mapping(Game => uint256) private joinableGamesIndexes;\n\n    // Nonce used for pseudo-random number generation.\n    uint256 private nonce;\n\n    ////////////\n    ///EVENTS///\n    ////////////\n\n    // Event emitted when a new game is created.\n    event NewGame(address indexed creator, Game game, bool small);\n\n    // Event emitted when a player joins a game.\n    event JoinGame(address indexed player, Game indexed game);\n\n    // Event emitted when player fails to join a random game.\n    event NoGame(address indexed player);\n\n    ///////////////\n    ////PUBLIC/////\n    ///FUNCTIONS///\n    ///////////////\n\n    // Function used to create a new game and select the size.\n    function createGame(bool _small) external {\n        // Create a new game\n        Game newGame = new Game(msg.sender, _small);\n\n        // Add the game. \n        _addGame(newGame);\n\n        // Emit event to inform client about the new game address.\n        emit NewGame(msg.sender, newGame, _small);\n    }\n\n    // Function used to join a pre-existing game knowing the ID.\n    function joinGameByID(Game _game) external {\n\n        // If the game is not in the joinableGame list.\n        require(joinableGamesMap[_game] == true,\"This game is not available!\");\n\n        // If the owner tries to join his own game as guest.\n        require( msg.sender != _game.owner(),\"You cannot join this match!\");\n\n        // Register the the second player.\n        _game.matchJoin(msg.sender);\n\n        // Delete the game from the joinable game list.\n        _removeGame(_game);\n\n        // Emit event to inform that the second player has joined the game.\n        emit JoinGame(msg.sender, _game);\n    }\n\n    function joinRandomGame() external {\n        require(joinableGames.length > 0, \"There is no avaiable game, try later!\");\n\n        // Generate a random index to access the joinable game list.\n        uint256 random = uint256(\n            keccak256(abi.encodePacked(blockhash(block.number - 1), msg.sender, nonce))\n        ) % joinableGames.length;\n\n        // Increment nonce.\n        nonce++;\n\n        // Iterating the list we select the first suitable game that.\n        bool found = false;\n        for (uint256 i = random; i < joinableGames.length; i++) {\n\n            Game game = joinableGames[(i % joinableGames.length)];\n\n            // Check if the condition is respected.\n            if (game.owner() != msg.sender) {\n                found = true;\n\n                // Register the second player.\n                game.matchJoin(msg.sender);\n\n                // Remove game from the joinable game list.\n                _removeGame(game);\n\n                // Emit event to inform the sender about the game address.\n                emit JoinGame(msg.sender, game);\n                break;\n            }\n        }\n        if (!found) emit NoGame(msg.sender);\n    }\n\n\n    /////////////\n    ///HELPERS///\n    /////////////\n\n    // removal of a game from the joinable game list.\n    function _removeGame(Game _game) internal {\n\n        assert(joinableGamesMap[_game] == true);\n        assert(joinableGames.length > 0);\n        delete joinableGamesMap[_game];\n\n\n        uint256 index = joinableGamesIndexes[_game];\n\n        // Update the joinable games index list.\n        if (joinableGames.length == 1 || index == joinableGames.length - 1) {\n            joinableGames.pop();\n        } else {\n            joinableGames[index] = joinableGames[joinableGames.length - 1];\n            joinableGames.pop();\n            joinableGamesIndexes[joinableGames[index]] = index;\n        }\n\n        delete joinableGamesIndexes[_game];\n    }\n\n    // Add a game to the joinable game list.\n    function _addGame(Game _game) internal {\n        joinableGamesMap[_game] = true;\n        joinableGames.push(_game);\n        joinableGamesIndexes[_game] = joinableGames.length - 1;\n    }\n\n\n}",
  "sourcePath": "/home/azk/Desktop/eth-merkletree-battleship/contracts/GamesManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/GamesManager.sol",
    "exportedSymbols": {
      "Game": [
        1778
      ],
      "GamesManager": [
        2105
      ],
      "MerkleProof": [
        527
      ]
    },
    "id": 2106,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1780,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "project:/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2106,
        "sourceUnit": 1779,
        "src": "65:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GamesManager",
        "contractDependencies": [
          1778
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2105,
        "linearizedBaseContracts": [
          2105
        ],
        "name": "GamesManager",
        "nameLocation": "96:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1786,
            "mutability": "mutable",
            "name": "joinableGamesMap",
            "nameLocation": "181:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 2105,
            "src": "151:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
              "typeString": "mapping(contract Game => bool)"
            },
            "typeName": {
              "id": 1785,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1783,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1782,
                  "name": "Game",
                  "nameLocations": [
                    "159:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "159:4:2"
                },
                "referencedDeclaration": 1778,
                "src": "159:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1778",
                  "typeString": "contract Game"
                }
              },
              "nodeType": "Mapping",
              "src": "151:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                "typeString": "mapping(contract Game => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1784,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "167:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1790,
            "mutability": "mutable",
            "name": "joinableGames",
            "nameLocation": "268:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 2105,
            "src": "253:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
              "typeString": "contract Game[]"
            },
            "typeName": {
              "baseType": {
                "id": 1788,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1787,
                  "name": "Game",
                  "nameLocations": [
                    "253:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "253:4:2"
                },
                "referencedDeclaration": 1778,
                "src": "253:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1778",
                  "typeString": "contract Game"
                }
              },
              "id": 1789,
              "nodeType": "ArrayTypeName",
              "src": "253:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage_ptr",
                "typeString": "contract Game[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1795,
            "mutability": "mutable",
            "name": "joinableGamesIndexes",
            "nameLocation": "376:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 2105,
            "src": "343:53:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
              "typeString": "mapping(contract Game => uint256)"
            },
            "typeName": {
              "id": 1794,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1792,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1791,
                  "name": "Game",
                  "nameLocations": [
                    "351:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "351:4:2"
                },
                "referencedDeclaration": 1778,
                "src": "351:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1778",
                  "typeString": "contract Game"
                }
              },
              "nodeType": "Mapping",
              "src": "343:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                "typeString": "mapping(contract Game => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1793,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "359:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1797,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "474:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 2105,
            "src": "458:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1798,
              "nodeType": "StructuredDocumentation",
              "src": "503:12:2",
              "text": "EVENTS///"
            },
            "eventSelector": "43ec5ca1a093170b11baf659159a896405b0393d8c5ce4a63c8dd450e2af0e5b",
            "id": 1807,
            "name": "NewGame",
            "nameLocation": "593:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1800,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "617:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "601:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1803,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "game",
                  "nameLocation": "631:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "626:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1801,
                      "name": "Game",
                      "nameLocations": [
                        "626:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "626:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "626:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1805,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "small",
                  "nameLocation": "642:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "637:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:48:2"
            },
            "src": "587:62:2"
          },
          {
            "anonymous": false,
            "eventSelector": "07b29210dc1c79e9a69cc69e470ffe66a4cac664f90d5aae30dc519c5c78e53e",
            "id": 1814,
            "name": "JoinGame",
            "nameLocation": "710:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1809,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "735:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1814,
                  "src": "719:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "game",
                  "nameLocation": "756:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1814,
                  "src": "743:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1810,
                      "name": "Game",
                      "nameLocations": [
                        "743:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "743:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "743:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:43:2"
            },
            "src": "704:58:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e2fe41c4bd195a4573c815ce24df9bdab82f85913f56314cd3225ce056ffb383",
            "id": 1818,
            "name": "NoGame",
            "nameLocation": "836:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "859:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1818,
                  "src": "843:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:24:2"
            },
            "src": "830:37:2"
          },
          {
            "body": {
              "id": 1846,
              "nodeType": "Block",
              "src": "1059:262:2",
              "statements": [
                {
                  "assignments": [
                    1826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1826,
                      "mutability": "mutable",
                      "name": "newGame",
                      "nameLocation": "1103:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1846,
                      "src": "1098:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1778",
                        "typeString": "contract Game"
                      },
                      "typeName": {
                        "id": 1825,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1824,
                          "name": "Game",
                          "nameLocations": [
                            "1098:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1778,
                          "src": "1098:4:2"
                        },
                        "referencedDeclaration": 1778,
                        "src": "1098:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1834,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1122:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1126:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1122:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1832,
                        "name": "_small",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1821,
                        "src": "1134:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1113:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bool_$returns$_t_contract$_Game_$1778_$",
                        "typeString": "function (address,bool) returns (contract Game)"
                      },
                      "typeName": {
                        "id": 1828,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1827,
                          "name": "Game",
                          "nameLocations": [
                            "1117:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1778,
                          "src": "1117:4:2"
                        },
                        "referencedDeclaration": 1778,
                        "src": "1117:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    },
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1113:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1098:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1836,
                        "name": "newGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "1187:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1835,
                      "name": "_addGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2104,
                      "src": "1178:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1778_$returns$__$",
                        "typeString": "function (contract Game)"
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:17:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1840,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1286:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1290:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1286:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1842,
                        "name": "newGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "1298:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      {
                        "id": 1843,
                        "name": "_small",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1821,
                        "src": "1307:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1839,
                      "name": "NewGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "1278:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1778_$_t_bool_$returns$__$",
                        "typeString": "function (address,contract Game,bool)"
                      }
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1845,
                  "nodeType": "EmitStatement",
                  "src": "1273:41:2"
                }
              ]
            },
            "documentation": {
              "id": 1819,
              "nodeType": "StructuredDocumentation",
              "src": "913:15:2",
              "text": "FUNCTIONS///"
            },
            "functionSelector": "a35203c4",
            "id": 1847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createGame",
            "nameLocation": "1026:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "_small",
                  "nameLocation": "1042:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "1037:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:13:2"
            },
            "returnParameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:2"
            },
            "scope": 2105,
            "src": "1017:304:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1889,
              "nodeType": "Block",
              "src": "1435:568:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1854,
                            "name": "joinableGamesMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "1510:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                              "typeString": "mapping(contract Game => bool)"
                            }
                          },
                          "id": 1856,
                          "indexExpression": {
                            "id": 1855,
                            "name": "_game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1850,
                            "src": "1527:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1510:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1537:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1510:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732067616d65206973206e6f7420617661696c61626c6521",
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e",
                          "typeString": "literal_string \"This game is not available!\""
                        },
                        "value": "This game is not available!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0913919631d4d0c7a076e06bb5ea6efdab6f88e1edef32bc9add33516ae2343e",
                          "typeString": "literal_string \"This game is not available!\""
                        }
                      ],
                      "id": 1853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1502:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1863,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1653:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1657:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1653:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1865,
                              "name": "_game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1850,
                              "src": "1667:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1778",
                                "typeString": "contract Game"
                              }
                            },
                            "id": 1866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1673:5:2",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 581,
                            "src": "1667:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1667:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1653:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74206a6f696e2074686973206d6174636821",
                        "id": 1869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1681:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c",
                          "typeString": "literal_string \"You cannot join this match!\""
                        },
                        "value": "You cannot join this match!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b2de9a6f089d91a8b2093242b7bcd4f07fdadc3082e6af47ae27f94a529e73c",
                          "typeString": "literal_string \"You cannot join this match!\""
                        }
                      ],
                      "id": 1862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1644:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1871,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1875,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1781:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1785:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1781:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1872,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "1765:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "id": 1874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1771:9:2",
                      "memberName": "matchJoin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "1765:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1878,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1880,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "1871:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1879,
                      "name": "_removeGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2076,
                      "src": "1859:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1778_$returns$__$",
                        "typeString": "function (contract Game)"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:18:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1884,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1978:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1982:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1978:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1886,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "1990:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1883,
                      "name": "JoinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1814,
                      "src": "1969:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1778_$returns$__$",
                        "typeString": "function (address,contract Game)"
                      }
                    },
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1888,
                  "nodeType": "EmitStatement",
                  "src": "1964:32:2"
                }
              ]
            },
            "functionSelector": "2123bffc",
            "id": 1890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinGameByID",
            "nameLocation": "1401:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "1419:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "1414:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1849,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1848,
                      "name": "Game",
                      "nameLocations": [
                        "1414:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "1414:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "1414:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1413:12:2"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1435:0:2"
            },
            "scope": 2105,
            "src": "1392:611:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "2044:1130:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1894,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "2062:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2076:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2062:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2085:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f206176616961626c652067616d652c20747279206c6174657221",
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0",
                          "typeString": "literal_string \"There is no avaiable game, try later!\""
                        },
                        "value": "There is no avaiable game, try later!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4863a99fa16d290344df34a377a252fce0da666b214a32e6890009d42fc5c3e0",
                          "typeString": "literal_string \"There is no avaiable game, try later!\""
                        }
                      ],
                      "id": 1893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2054:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:74:2"
                },
                {
                  "assignments": [
                    1902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1902,
                      "mutability": "mutable",
                      "name": "random",
                      "nameLocation": "2216:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "2208:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1901,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1912,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1909,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "2283:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1910,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2289:6:2",
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "2283:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1911,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2298:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2283:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1908,
                                    "name": "blockhash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967291,
                                    "src": "2273:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 1913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2273:27:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1914,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2302:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2306:6:2",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2302:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1916,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1797,
                                  "src": "2314:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1906,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2256:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2260:12:2",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2256:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2256:64:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1905,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "2246:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2246:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2225:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1903,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2225:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2225:106:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 1920,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "2334:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2348:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2334:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2225:129:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2208:146:2"
                },
                {
                  "expression": {
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2393:7:2",
                    "subExpression": {
                      "id": 1924,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1797,
                      "src": "2393:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1926,
                  "nodeType": "ExpressionStatement",
                  "src": "2393:7:2"
                },
                {
                  "assignments": [
                    1928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1928,
                      "mutability": "mutable",
                      "name": "found",
                      "nameLocation": "2486:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "2481:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1927,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2481:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1930,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2494:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2481:18:2"
                },
                {
                  "body": {
                    "id": 1983,
                    "nodeType": "Block",
                    "src": "2565:558:2",
                    "statements": [
                      {
                        "assignments": [
                          1944
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1944,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "2585:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1983,
                            "src": "2580:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            },
                            "typeName": {
                              "id": 1943,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1942,
                                "name": "Game",
                                "nameLocations": [
                                  "2580:4:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1778,
                                "src": "2580:4:2"
                              },
                              "referencedDeclaration": 1778,
                              "src": "2580:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1778",
                                "typeString": "contract Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1952,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1945,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "2592:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 1951,
                          "indexExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1946,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1932,
                                  "src": "2607:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1947,
                                    "name": "joinableGames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1790,
                                    "src": "2611:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                      "typeString": "contract Game[] storage ref"
                                    }
                                  },
                                  "id": 1948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2625:6:2",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2611:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2607:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1950,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2606:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2592:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1778",
                            "typeString": "contract Game"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2580:53:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1953,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1944,
                                "src": "2704:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Game_$1778",
                                  "typeString": "contract Game"
                                }
                              },
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2709:5:2",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 581,
                              "src": "2704:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2704:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1956,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2720:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2724:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2720:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2704:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1982,
                        "nodeType": "IfStatement",
                        "src": "2700:413:2",
                        "trueBody": {
                          "id": 1981,
                          "nodeType": "Block",
                          "src": "2732:381:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1959,
                                  "name": "found",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1928,
                                  "src": "2750:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2758:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2750:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1962,
                              "nodeType": "ExpressionStatement",
                              "src": "2750:12:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1966,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2843:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1967,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2847:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2843:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1963,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1944,
                                    "src": "2828:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  },
                                  "id": 1965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2833:9:2",
                                  "memberName": "matchJoin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 942,
                                  "src": "2828:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 1968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2828:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1969,
                              "nodeType": "ExpressionStatement",
                              "src": "2828:26:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1971,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1944,
                                    "src": "2945:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  ],
                                  "id": 1970,
                                  "name": "_removeGame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2076,
                                  "src": "2933:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1778_$returns$__$",
                                    "typeString": "function (contract Game)"
                                  }
                                },
                                "id": 1972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2933:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1973,
                              "nodeType": "ExpressionStatement",
                              "src": "2933:17:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1975,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3058:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3062:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3058:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1977,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1944,
                                    "src": "3070:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  ],
                                  "id": 1974,
                                  "name": "JoinGame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1814,
                                  "src": "3049:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1778_$returns$__$",
                                    "typeString": "function (address,contract Game)"
                                  }
                                },
                                "id": 1978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3049:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1979,
                              "nodeType": "EmitStatement",
                              "src": "3044:31:2"
                            },
                            {
                              "id": 1980,
                              "nodeType": "Break",
                              "src": "3093:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1935,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "2534:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1936,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "2538:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2552:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2538:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2534:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1984,
                  "initializationExpression": {
                    "assignments": [
                      1932
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1932,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2522:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1984,
                        "src": "2514:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1931,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2514:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1934,
                    "initialValue": {
                      "id": 1933,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1902,
                      "src": "2526:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2514:18:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2560:3:2",
                      "subExpression": {
                        "id": 1939,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "2560:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1941,
                    "nodeType": "ExpressionStatement",
                    "src": "2560:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2509:614:2"
                },
                {
                  "condition": {
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3136:6:2",
                    "subExpression": {
                      "id": 1985,
                      "name": "found",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1928,
                      "src": "3137:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1992,
                  "nodeType": "IfStatement",
                  "src": "3132:35:2",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1988,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3156:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3160:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3156:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1987,
                        "name": "NoGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "3149:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3149:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1991,
                    "nodeType": "EmitStatement",
                    "src": "3144:23:2"
                  }
                }
              ]
            },
            "functionSelector": "342ca184",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinRandomGame",
            "nameLocation": "2018:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2032:2:2"
            },
            "returnParameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:0:2"
            },
            "scope": 2105,
            "src": "2009:1165:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "3332:600:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2002,
                            "name": "joinableGamesMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "3350:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                              "typeString": "mapping(contract Game => bool)"
                            }
                          },
                          "id": 2004,
                          "indexExpression": {
                            "id": 2003,
                            "name": "_game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "3367:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3350:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3377:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3350:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2001,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3343:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2010,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "3399:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3413:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3399:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3422:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3399:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2009,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3392:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:32:2"
                },
                {
                  "expression": {
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3434:30:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2016,
                        "name": "joinableGamesMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "3441:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                          "typeString": "mapping(contract Game => bool)"
                        }
                      },
                      "id": 2018,
                      "indexExpression": {
                        "id": 2017,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1998,
                        "src": "3458:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3441:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2020,
                  "nodeType": "ExpressionStatement",
                  "src": "3434:30:2"
                },
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "3484:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2075,
                      "src": "3476:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3476:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2026,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2023,
                      "name": "joinableGamesIndexes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "3492:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                        "typeString": "mapping(contract Game => uint256)"
                      }
                    },
                    "id": 2025,
                    "indexExpression": {
                      "id": 2024,
                      "name": "_game",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1998,
                      "src": "3513:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1778",
                        "typeString": "contract Game"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3492:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3476:43:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2027,
                          "name": "joinableGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1790,
                          "src": "3583:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                            "typeString": "contract Game[] storage ref"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3597:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3583:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3607:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3583:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2031,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "3612:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2032,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "3621:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3635:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3621:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3644:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3621:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3612:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3583:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2068,
                    "nodeType": "Block",
                    "src": "3697:184:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2044,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3711:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2046,
                            "indexExpression": {
                              "id": 2045,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "3725:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3711:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2047,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3734:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2052,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2048,
                                  "name": "joinableGames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1790,
                                  "src": "3748:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                    "typeString": "contract Game[] storage ref"
                                  }
                                },
                                "id": 2049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3762:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3748:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3771:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3748:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3734:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "src": "3711:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1778",
                            "typeString": "contract Game"
                          }
                        },
                        "id": 2054,
                        "nodeType": "ExpressionStatement",
                        "src": "3711:62:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2055,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3787:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3801:3:2",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3787:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$",
                              "typeString": "function (contract Game[] storage pointer)"
                            }
                          },
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3787:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2059,
                        "nodeType": "ExpressionStatement",
                        "src": "3787:19:2"
                      },
                      {
                        "expression": {
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2060,
                              "name": "joinableGamesIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1795,
                              "src": "3820:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                                "typeString": "mapping(contract Game => uint256)"
                              }
                            },
                            "id": 2064,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2061,
                                "name": "joinableGames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1790,
                                "src": "3841:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                  "typeString": "contract Game[] storage ref"
                                }
                              },
                              "id": 2063,
                              "indexExpression": {
                                "id": 2062,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2022,
                                "src": "3855:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3841:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1778",
                                "typeString": "contract Game"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3820:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2065,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "3865:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3820:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2067,
                        "nodeType": "ExpressionStatement",
                        "src": "3820:50:2"
                      }
                    ]
                  },
                  "id": 2069,
                  "nodeType": "IfStatement",
                  "src": "3579:302:2",
                  "trueBody": {
                    "id": 2043,
                    "nodeType": "Block",
                    "src": "3647:44:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2038,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3661:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3675:3:2",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3661:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$",
                              "typeString": "function (contract Game[] storage pointer)"
                            }
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3661:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2042,
                        "nodeType": "ExpressionStatement",
                        "src": "3661:19:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3891:34:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2070,
                        "name": "joinableGamesIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "3898:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                          "typeString": "mapping(contract Game => uint256)"
                        }
                      },
                      "id": 2072,
                      "indexExpression": {
                        "id": 2071,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1998,
                        "src": "3919:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3898:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "3891:34:2"
                }
              ]
            },
            "documentation": {
              "id": 1995,
              "nodeType": "StructuredDocumentation",
              "src": "3199:13:2",
              "text": "HELPERS///"
            },
            "id": 2076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeGame",
            "nameLocation": "3299:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "3316:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "3311:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1997,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1996,
                      "name": "Game",
                      "nameLocations": [
                        "3311:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "3311:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "3311:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3310:12:2"
            },
            "returnParameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3332:0:2"
            },
            "scope": 2105,
            "src": "3290:642:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2103,
              "nodeType": "Block",
              "src": "4022:146:2",
              "statements": [
                {
                  "expression": {
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2082,
                        "name": "joinableGamesMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "4032:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                          "typeString": "mapping(contract Game => bool)"
                        }
                      },
                      "id": 2084,
                      "indexExpression": {
                        "id": 2083,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "4049:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4032:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4058:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4032:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2091,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "4091:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "expression": {
                        "id": 2088,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "4072:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4086:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4072:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$_t_contract$_Game_$1778_$returns$__$attached_to$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$",
                        "typeString": "function (contract Game[] storage pointer,contract Game)"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2093,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:25:2"
                },
                {
                  "expression": {
                    "id": 2101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2094,
                        "name": "joinableGamesIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "4107:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                          "typeString": "mapping(contract Game => uint256)"
                        }
                      },
                      "id": 2096,
                      "indexExpression": {
                        "id": 2095,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "4128:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4107:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2097,
                          "name": "joinableGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1790,
                          "src": "4137:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                            "typeString": "contract Game[] storage ref"
                          }
                        },
                        "id": 2098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4151:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4137:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4160:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4137:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4107:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2102,
                  "nodeType": "ExpressionStatement",
                  "src": "4107:54:2"
                }
              ]
            },
            "id": 2104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addGame",
            "nameLocation": "3992:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "4006:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2104,
                  "src": "4001:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 2078,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2077,
                      "name": "Game",
                      "nameLocations": [
                        "4001:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "4001:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "4001:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:12:2"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4022:0:2"
            },
            "scope": 2105,
            "src": "3983:185:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2106,
        "src": "87:4085:2",
        "usedErrors": []
      }
    ],
    "src": "32:4140:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1688570974009": {
      "events": {},
      "links": {},
      "address": "0x3f1a87E9002e31867C39792BC75BE50d83A6B10A",
      "transactionHash": "0x2b27df48a16f845a6605f5ee4079525ffbd79b7ee5f752949eb396a33e71e81e"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-07-05T15:29:48.429Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewGame(address,address,bool)": {
        "notice": "EVENTS///"
      }
    },
    "kind": "user",
    "methods": {
      "createGame(bool)": {
        "notice": "FUNCTIONS///"
      }
    },
    "version": 1
  }
}