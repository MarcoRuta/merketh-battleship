{
  "contractName": "GamesManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "GameNotValid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Game",
          "name": "game",
          "type": "address"
        }
      ],
      "name": "JoinGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract Game",
          "name": "game",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "small",
          "type": "bool"
        }
      ],
      "name": "NewGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "NoGame",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_small",
          "type": "bool"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Game",
          "name": "_game",
          "type": "address"
        }
      ],
      "name": "joinGameByID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinRandomGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameNotValid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Game\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"JoinGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Game\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"small\",\"type\":\"bool\"}],\"name\":\"NewGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"NoGame\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_small\",\"type\":\"bool\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Game\",\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"joinGameByID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinRandomGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"NewGame(address,address,bool)\":{\"notice\":\"EVENTS///\"}},\"kind\":\"user\",\"methods\":{\"createGame(bool)\":{\"notice\":\"FUNCTIONS///\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GamesManager.sol\":\"GamesManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"project:/contracts/Game.sol\":{\"keccak256\":\"0x84cbc3e95d60f916c790dca8f085f466b4cbba9ee10da786ee5b7ebc59c1a7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87ba7d77f52d23ecaef5d1ab0c5148e4273a7226c532448bd9815120892705bb\",\"dweb:/ipfs/QmSdZPvBYwLtzfJULcKDcRWiee4mafCSqsr2EhaNwQxRC8\"]},\"project:/contracts/GamesManager.sol\":{\"keccak256\":\"0x8d017535d717d4d2304225ac50a1245e115df849ca99d961a62ffdf9fde9ee37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b569f66a20e5eecf7f9e36b9d2b3a5cd3d66e916b1614a1ce0916c3a71e52d\",\"dweb:/ipfs/QmR6BFCATdLo3svtVdB7EVpdpCqi288U92f7m3ktEQbudC\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7711:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:3",
                "type": ""
              }
            ],
            "src": "466:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "626:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "636:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "665:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "647:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "636:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Game_$1704",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "608:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "618:7:3",
                "type": ""
              }
            ],
            "src": "568:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "739:92:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "821:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "762:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "800:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Game_$1704",
                              "nodeType": "YulIdentifier",
                              "src": "769:30:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "769:37:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "759:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "759:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:56:3"
                  },
                  "nodeType": "YulIf",
                  "src": "749:76:3"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Game_$1704",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "732:5:3",
                "type": ""
              }
            ],
            "src": "683:148:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:100:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "912:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "921:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "912:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "990:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Game_$1704",
                      "nodeType": "YulIdentifier",
                      "src": "950:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:46:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:46:3"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Game_$1704",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "880:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "888:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:3",
                "type": ""
              }
            ],
            "src": "837:165:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1087:276:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1133:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1135:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1135:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1135:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1108:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1117:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1104:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1129:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1100:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1097:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1226:130:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1241:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1245:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1270:76:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1318:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1329:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1314:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1314:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1338:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Game_$1704",
                          "nodeType": "YulIdentifier",
                          "src": "1280:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1280:66:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1270:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Game_$1704",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1068:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1080:6:3",
                "type": ""
              }
            ],
            "src": "1008:355:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1411:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1421:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1446:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1439:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1432:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1421:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1393:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1403:7:3",
                "type": ""
              }
            ],
            "src": "1369:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:76:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1559:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1568:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1571:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1561:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1561:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1561:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1528:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1550:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "1535:14:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1535:21:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1525:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1525:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:40:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1515:60:3"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1498:5:3",
                "type": ""
              }
            ],
            "src": "1465:116:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1636:84:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1646:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1668:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1655:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1646:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1708:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1684:23:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1684:30:3"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1614:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1622:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1630:5:3",
                "type": ""
              }
            ],
            "src": "1587:133:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:260:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1835:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1837:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1837:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1837:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1810:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1819:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1806:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1806:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1831:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1802:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1799:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1928:114:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1943:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1957:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1947:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1972:60:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2004:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2015:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2000:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2000:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2024:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1982:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:50:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1972:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1759:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1770:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1782:6:3",
                "type": ""
              }
            ],
            "src": "1726:323:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2098:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2155:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2164:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2167:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2157:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2157:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2157:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2121:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2146:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2128:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2128:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2118:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2108:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2091:5:3",
                "type": ""
              }
            ],
            "src": "2055:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2246:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2256:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2271:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2265:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2265:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2256:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2314:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2287:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2287:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2287:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2224:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2232:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2240:5:3",
                "type": ""
              }
            ],
            "src": "2183:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2409:274:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2455:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2457:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2457:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2457:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2430:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2439:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2426:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2451:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2422:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2419:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2548:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2563:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2577:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2567:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2592:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2638:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2649:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2634:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2634:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2658:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2602:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2602:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2592:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2379:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2390:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2402:6:3",
                "type": ""
              }
            ],
            "src": "2332:351:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2754:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2771:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2794:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2776:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2764:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2764:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2764:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2742:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2749:3:3",
                "type": ""
              }
            ],
            "src": "2689:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2911:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2921:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2933:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2944:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2929:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2921:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3001:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3014:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3025:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3010:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3010:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2957:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2957:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2957:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2883:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2895:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2906:4:3",
                "type": ""
              }
            ],
            "src": "2813:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3086:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3096:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3107:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3096:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3068:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3078:7:3",
                "type": ""
              }
            ],
            "src": "3041:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3152:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3169:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3172:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3162:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3162:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3162:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3259:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3259:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3259:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3290:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3293:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3283:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3283:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3124:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3355:149:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3365:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3388:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3370:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3365:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3399:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3422:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3404:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3404:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3399:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3433:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3445:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3448:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3441:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3441:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3433:4:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3475:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3477:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3477:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3477:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "3466:4:3"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3472:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3463:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:11:3"
                  },
                  "nodeType": "YulIf",
                  "src": "3460:37:3"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3341:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3344:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3350:4:3",
                "type": ""
              }
            ],
            "src": "3310:194:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3555:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3565:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3576:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3565:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3537:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3547:7:3",
                "type": ""
              }
            ],
            "src": "3510:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3640:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3650:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3661:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "3650:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3622:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "3632:7:3",
                "type": ""
              }
            ],
            "src": "3593:79:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3761:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3778:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3821:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "3803:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3803:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3783:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3783:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3771:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3771:58:3"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3749:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3756:3:3",
                "type": ""
              }
            ],
            "src": "3678:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3883:52:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3893:35:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3918:2:3",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3922:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "3914:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3914:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "3893:8:3"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3864:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "3874:8:3",
                "type": ""
              }
            ],
            "src": "3841:94:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3988:47:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3998:31:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4023:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "4009:13:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "3998:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3970:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "3980:7:3",
                "type": ""
              }
            ],
            "src": "3941:94:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4088:53:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4098:37:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4129:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4109:19:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:26:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "4098:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4070:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "4080:7:3",
                "type": ""
              }
            ],
            "src": "4041:100:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4230:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4247:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4290:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4272:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4272:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4252:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4252:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4240:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4240:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4240:58:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4218:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4225:3:3",
                "type": ""
              }
            ],
            "src": "4147:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4357:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4367:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4378:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "4367:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4339:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "4349:7:3",
                "type": ""
              }
            ],
            "src": "4310:79:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4478:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4495:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4538:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4520:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4520:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4500:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4500:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4488:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4488:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4488:58:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4466:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4473:3:3",
                "type": ""
              }
            ],
            "src": "4395:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4730:366:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4803:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4812:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4741:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4741:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4741:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4825:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4836:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4841:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4832:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4832:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4825:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4916:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4925:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4854:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4854:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4854:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4938:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4949:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4954:2:3",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4945:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4945:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4938:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5029:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5038:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4967:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4967:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4967:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5051:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5062:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5067:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5058:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5051:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5080:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5087:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5080:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4693:3:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4699:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4707:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4715:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4726:3:3",
                "type": ""
              }
            ],
            "src": "4558:538:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5130:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5147:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5150:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5140:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5140:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5244:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5247:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5237:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5237:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5268:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5271:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5261:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5261:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5261:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "5102:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5322:142:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5332:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5355:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5337:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5332:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5366:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5389:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5371:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5371:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5366:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5413:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "5415:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5415:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5415:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5410:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5403:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5403:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5400:35:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5444:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5453:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5456:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "5449:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "5444:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5311:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5314:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "5320:1:3",
                "type": ""
              }
            ],
            "src": "5288:176:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5513:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5523:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5523:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5646:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5648:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5648:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5648:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5571:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5578:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5568:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5568:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5565:103:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5677:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5688:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5695:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5684:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5684:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5677:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5499:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5509:3:3",
                "type": ""
              }
            ],
            "src": "5470:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5737:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5754:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5757:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5747:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5747:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5747:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5851:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5854:4:3",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5844:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5844:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5844:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5875:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5878:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5868:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5868:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5868:15:3"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5709:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5954:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5971:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5991:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5976:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5976:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5964:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5964:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5964:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5942:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5949:3:3",
                "type": ""
              }
            ],
            "src": "5895:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6130:200:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6140:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6152:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6163:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6148:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6148:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6140:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6220:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6244:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6176:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6176:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6176:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6295:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6308:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6319:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6304:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6304:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6257:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6257:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6257:66:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6094:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6106:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6114:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6125:4:3",
                "type": ""
              }
            ],
            "src": "6010:320:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6368:28:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6378:12:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6385:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6378:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6354:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6364:3:3",
                "type": ""
              }
            ],
            "src": "6336:60:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6462:82:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6472:66:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6530:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "6512:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6512:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "6503:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6485:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6485:53:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6472:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6442:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6452:9:3",
                "type": ""
              }
            ],
            "src": "6402:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6610:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6620:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6664:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6633:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6620:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6590:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6600:9:3",
                "type": ""
              }
            ],
            "src": "6550:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6755:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6765:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6809:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6778:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6778:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6765:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Game_$1704_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6735:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6745:9:3",
                "type": ""
              }
            ],
            "src": "6682:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6905:79:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6922:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6971:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Game_$1704_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6927:43:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6927:50:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6915:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6915:63:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6915:63:3"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Game_$1704_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6893:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6900:3:3",
                "type": ""
              }
            ],
            "src": "6827:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7123:213:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7133:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7145:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7156:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7141:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7141:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7133:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7226:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7239:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7250:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7235:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7235:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Game_$1704_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7169:56:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:84:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7169:84:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7301:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7314:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7325:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7310:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7310:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7263:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7263:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7263:66:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Game_$1704_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7087:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7099:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7107:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7118:4:3",
                "type": ""
              }
            ],
            "src": "6990:346:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7370:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7387:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7390:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7380:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7380:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7380:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7484:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7487:4:3",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7477:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7477:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7477:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7508:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7501:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7501:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7501:15:3"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "7342:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7556:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7573:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7576:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7566:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7566:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7566:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7670:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7673:4:3",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7663:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7663:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7663:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7694:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7687:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7687:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7687:15:3"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "7528:180:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Game_$1704(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Game_$1704(value) {\n        if iszero(eq(value, cleanup_t_contract$_Game_$1704(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Game_$1704(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Game_$1704(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Game_$1704(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Game_$1704(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Game_$1704_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Game_$1704_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Game_$1704_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Game_$1704_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_Game_$1704_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "87:4205:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "87:4205:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:572;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2087:1212;;;:::i;:::-;;1135:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1509:572;1660:16;:23;1677:5;1660:23;;;;;;;;;;;;;;;;;;;;;;;;;1659:24;:55;;;;1701:5;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1687:27;;:10;:27;;;1659:55;1655:135;;;1748:10;1735:24;;;;;;;;;;;;1773:7;;1655:135;1843:5;:15;;;1859:10;1843:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:18;1949:5;1937:11;:18::i;:::-;2068:5;2047:27;;2056:10;2047:27;;;;;;;;;;;;1509:572;;:::o;2087:1212::-;2160:1;2137:13;:20;;;;:24;2133:98;;;2189:10;2182:18;;;;;;;;;;;;2214:7;;2133:98;2310:14;2466:13;:20;;;;2417:1;2402:12;:16;;;;:::i;:::-;2392:27;2421:10;2433:5;;2375:64;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2348:105;;;;;;2327:136;;:159;;;;:::i;:::-;2310:176;;2525:5;;:7;;;;;;;;;:::i;:::-;;;;;;2607:10;2640:9;2652:6;2640:18;;2635:613;2664:13;:20;;;;2660:1;:24;2635:613;;;2705:9;2717:13;2736;:20;;;;2732:1;:24;;;;:::i;:::-;2717:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2705:53;;2845:10;2829:26;;:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;2825:413;;2883:4;2875:12;;2953:4;:14;;;2968:10;2953:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:17;3070:4;3058:11;:17::i;:::-;3195:4;3174:26;;3183:10;3174:26;;;;;;;;;;;;3218:5;;;2825:413;2691:557;2686:3;;;;;:::i;:::-;;;;2635:613;;;;3262:5;3257:35;;3281:10;3274:18;;;;;;;;;;;;3257:35;2122:1177;;2087:1212;:::o;1135:303::-;1216:12;1240:10;1252:6;1231:28;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1216:43;;1295:17;1304:7;1295:8;:17::i;:::-;1403:10;1395:36;;;1415:7;1424:6;1395:36;;;;;;;:::i;:::-;;;;;;;;1177:261;1135:303;:::o;3414:640::-;3500:4;3473:31;;:16;:23;3490:5;3473:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;3466:39;;;;:::i;:::-;;3545:1;3522:13;:20;;;;:24;3515:32;;;;:::i;:::-;;3564:16;:23;3581:5;3564:23;;;;;;;;;;;;;;;;3557:30;;;;;;;;;;;3598:13;3614:20;:27;3635:5;3614:27;;;;;;;;;;;;;;;;3598:43;;3729:1;3705:13;:20;;;;:25;:62;;;;3766:1;3743:13;:20;;;;:24;;;;:::i;:::-;3734:5;:33;3705:62;3701:302;;;3783:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701:302;;;3856:13;3893:1;3870:13;:20;;;;:24;;;;:::i;:::-;3856:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3833:13;3847:5;3833:20;;;;;;;;:::i;:::-;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;3909:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3987:5;3942:20;:42;3963:13;3977:5;3963:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3942:42;;;;;;;;;;;;;;;:50;;;;3701:302;4020:20;:27;4041:5;4020:27;;;;;;;;;;;;;;;4013:34;;;3456:598;3414:640;:::o;4105:185::-;4180:4;4154:16;:23;4171:5;4154:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4194:13;4213:5;4194:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:1;4259:13;:20;;;;:24;;;;:::i;:::-;4229:20;:27;4250:5;4229:27;;;;;;;;;;;;;;;:54;;;;4105:185;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:165::-;896:5;934:6;921:20;912:29;;950:46;990:5;950:46;:::i;:::-;837:165;;;;:::o;1008:355::-;1080:6;1129:2;1117:9;1108:7;1104:23;1100:32;1097:119;;;1135:79;;:::i;:::-;1097:119;1255:1;1280:66;1338:7;1329:6;1318:9;1314:22;1280:66;:::i;:::-;1270:76;;1226:130;1008:355;;;;:::o;1369:90::-;1403:7;1446:5;1439:13;1432:21;1421:32;;1369:90;;;:::o;1465:116::-;1535:21;1550:5;1535:21;:::i;:::-;1528:5;1525:32;1515:60;;1571:1;1568;1561:12;1515:60;1465:116;:::o;1587:133::-;1630:5;1668:6;1655:20;1646:29;;1684:30;1708:5;1684:30;:::i;:::-;1587:133;;;;:::o;1726:323::-;1782:6;1831:2;1819:9;1810:7;1806:23;1802:32;1799:119;;;1837:79;;:::i;:::-;1799:119;1957:1;1982:50;2024:7;2015:6;2004:9;2000:22;1982:50;:::i;:::-;1972:60;;1928:114;1726:323;;;;:::o;2055:122::-;2128:24;2146:5;2128:24;:::i;:::-;2121:5;2118:35;2108:63;;2167:1;2164;2157:12;2108:63;2055:122;:::o;2183:143::-;2240:5;2271:6;2265:13;2256:22;;2287:33;2314:5;2287:33;:::i;:::-;2183:143;;;;:::o;2332:351::-;2402:6;2451:2;2439:9;2430:7;2426:23;2422:32;2419:119;;;2457:79;;:::i;:::-;2419:119;2577:1;2602:64;2658:7;2649:6;2638:9;2634:22;2602:64;:::i;:::-;2592:74;;2548:128;2332:351;;;;:::o;2689:118::-;2776:24;2794:5;2776:24;:::i;:::-;2771:3;2764:37;2689:118;;:::o;2813:222::-;2906:4;2944:2;2933:9;2929:18;2921:26;;2957:71;3025:1;3014:9;3010:17;3001:6;2957:71;:::i;:::-;2813:222;;;;:::o;3041:77::-;3078:7;3107:5;3096:16;;3041:77;;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:194;3350:4;3370:20;3388:1;3370:20;:::i;:::-;3365:25;;3404:20;3422:1;3404:20;:::i;:::-;3399:25;;3448:1;3445;3441:9;3433:17;;3472:1;3466:4;3463:11;3460:37;;;3477:18;;:::i;:::-;3460:37;3310:194;;;;:::o;3510:77::-;3547:7;3576:5;3565:16;;3510:77;;;:::o;3593:79::-;3632:7;3661:5;3650:16;;3593:79;;;:::o;3678:157::-;3783:45;3803:24;3821:5;3803:24;:::i;:::-;3783:45;:::i;:::-;3778:3;3771:58;3678:157;;:::o;3841:94::-;3874:8;3922:5;3918:2;3914:14;3893:35;;3841:94;;;:::o;3941:::-;3980:7;4009:20;4023:5;4009:20;:::i;:::-;3998:31;;3941:94;;;:::o;4041:100::-;4080:7;4109:26;4129:5;4109:26;:::i;:::-;4098:37;;4041:100;;;:::o;4147:157::-;4252:45;4272:24;4290:5;4272:24;:::i;:::-;4252:45;:::i;:::-;4247:3;4240:58;4147:157;;:::o;4310:79::-;4349:7;4378:5;4367:16;;4310:79;;;:::o;4395:157::-;4500:45;4520:24;4538:5;4520:24;:::i;:::-;4500:45;:::i;:::-;4495:3;4488:58;4395:157;;:::o;4558:538::-;4726:3;4741:75;4812:3;4803:6;4741:75;:::i;:::-;4841:2;4836:3;4832:12;4825:19;;4854:75;4925:3;4916:6;4854:75;:::i;:::-;4954:2;4949:3;4945:12;4938:19;;4967:75;5038:3;5029:6;4967:75;:::i;:::-;5067:2;5062:3;5058:12;5051:19;;5087:3;5080:10;;4558:538;;;;;;:::o;5102:180::-;5150:77;5147:1;5140:88;5247:4;5244:1;5237:15;5271:4;5268:1;5261:15;5288:176;5320:1;5337:20;5355:1;5337:20;:::i;:::-;5332:25;;5371:20;5389:1;5371:20;:::i;:::-;5366:25;;5410:1;5400:35;;5415:18;;:::i;:::-;5400:35;5456:1;5453;5449:9;5444:14;;5288:176;;;;:::o;5470:233::-;5509:3;5532:24;5550:5;5532:24;:::i;:::-;5523:33;;5578:66;5571:5;5568:77;5565:103;;5648:18;;:::i;:::-;5565:103;5695:1;5688:5;5684:13;5677:20;;5470:233;;;:::o;5709:180::-;5757:77;5754:1;5747:88;5854:4;5851:1;5844:15;5878:4;5875:1;5868:15;5895:109;5976:21;5991:5;5976:21;:::i;:::-;5971:3;5964:34;5895:109;;:::o;6010:320::-;6125:4;6163:2;6152:9;6148:18;6140:26;;6176:71;6244:1;6233:9;6229:17;6220:6;6176:71;:::i;:::-;6257:66;6319:2;6308:9;6304:18;6295:6;6257:66;:::i;:::-;6010:320;;;;;:::o;6336:60::-;6364:3;6385:5;6378:12;;6336:60;;;:::o;6402:142::-;6452:9;6485:53;6503:34;6512:24;6530:5;6512:24;:::i;:::-;6503:34;:::i;:::-;6485:53;:::i;:::-;6472:66;;6402:142;;;:::o;6550:126::-;6600:9;6633:37;6664:5;6633:37;:::i;:::-;6620:50;;6550:126;;;:::o;6682:139::-;6745:9;6778:37;6809:5;6778:37;:::i;:::-;6765:50;;6682:139;;;:::o;6827:157::-;6927:50;6971:5;6927:50;:::i;:::-;6922:3;6915:63;6827:157;;:::o;6990:346::-;7118:4;7156:2;7145:9;7141:18;7133:26;;7169:84;7250:1;7239:9;7235:17;7226:6;7169:84;:::i;:::-;7263:66;7325:2;7314:9;7310:18;7301:6;7263:66;:::i;:::-;6990:346;;;;;:::o;7342:180::-;7390:77;7387:1;7380:88;7487:4;7484:1;7477:15;7511:4;7508:1;7501:15;7528:180;7576:77;7573:1;7566:88;7673:4;7670:1;7663:15;7697:4;7694:1;7687:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./Game.sol\";\n\ncontract GamesManager {\n    // Maps Games that are joinable.\n    mapping(Game => bool) private joinableGamesMap;\n\n    // Addresses of the joinable games.\n    Game[] private joinableGames;\n\n    // Mapping that keeps an index of the joinable games.\n    mapping(Game => uint256) private joinableGamesIndexes;\n\n    // Nonce used for gameID pseudo-random number generation.\n    uint256 private nonce;\n\n    ////////////\n    ///EVENTS///\n    ////////////\n\n    // Event emitted when a new game is created.\n    event NewGame(address indexed creator, Game game, bool small);\n\n    // Event emitted when a player joins a game.\n    event JoinGame(address indexed player, Game indexed game);\n\n    // Event emitted when player fails to join a random game.\n    event NoGame(address indexed player);\n\n    // Event emittend when player tries to join a not valid game. \n    event GameNotValid(address indexed player);\n\n    ///////////////\n    ////PUBLIC/////\n    ///FUNCTIONS///\n    ///////////////\n\n    // Function used to create a new game and select the size.\n    function createGame(bool _small) external {\n        // Create a new game\n        Game newGame = new Game(msg.sender, _small);\n\n        // Add the game.\n        _addGame(newGame);\n\n        // Emit event to inform client about the new game address.\n        emit NewGame(msg.sender, newGame, _small);\n    }\n\n    // Function used to join a pre-existing game knowing the ID.\n    function joinGameByID(Game _game) external {\n\n        // If the game is not in the joinableGame list or the owner tries to double access.\n        if (!joinableGamesMap[_game] || msg.sender == _game.owner()) {\n            emit GameNotValid(msg.sender);\n            return;\n        }\n\n        // Register the the second player.\n        _game.matchJoin(msg.sender);\n\n        // Delete the game from the joinable game list.\n        _removeGame(_game);\n\n        // Emit event to inform that the second player has joined the game.\n        emit JoinGame(msg.sender, _game);\n    }\n\n    function joinRandomGame() external {\n\n        if (joinableGames.length < 1) {\n            emit NoGame(msg.sender);\n            return;\n        }\n\n        // Generate a random index to access the joinable game list.\n        uint256 random = uint256(\n            keccak256(\n                abi.encodePacked(blockhash(block.number - 1), msg.sender, nonce)\n            )\n        ) % joinableGames.length;\n\n        // Increment nonce.\n        nonce++;\n\n        // Iterating the list we select the first suitable game\n        bool found = false;\n        for (uint256 i = random; i < joinableGames.length; i++) {\n            Game game = joinableGames[(i % joinableGames.length)];\n\n            // Check if the condition is respected.\n            if (game.owner() != msg.sender) {\n                found = true;\n\n                // Register the second player.\n                game.matchJoin(msg.sender);\n\n                // Remove game from the joinable game list.\n                _removeGame(game);\n\n                // Emit event to inform the sender about the game address.\n                emit JoinGame(msg.sender, game);\n                break;\n            }\n        }\n        if (!found) emit NoGame(msg.sender);\n    }\n\n    /////////////\n    ///HELPERS///\n    /////////////\n\n    // removal of a game from the joinable game list.\n    function _removeGame(Game _game) internal {\n        assert(joinableGamesMap[_game] == true);\n        assert(joinableGames.length > 0);\n        delete joinableGamesMap[_game];\n\n        uint256 index = joinableGamesIndexes[_game];\n\n        // Update the joinable games index list.\n        if (joinableGames.length == 1 || index == joinableGames.length - 1) {\n            joinableGames.pop();\n        } else {\n            joinableGames[index] = joinableGames[joinableGames.length - 1];\n            joinableGames.pop();\n            joinableGamesIndexes[joinableGames[index]] = index;\n        }\n\n        delete joinableGamesIndexes[_game];\n    }\n\n    // Add a game to the joinable game list.\n    function _addGame(Game _game) internal {\n        joinableGamesMap[_game] = true;\n        joinableGames.push(_game);\n        joinableGamesIndexes[_game] = joinableGames.length - 1;\n    }\n}\n",
  "sourcePath": "/home/azk/Desktop/merketh-battleship/backend/contracts/GamesManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/GamesManager.sol",
    "exportedSymbols": {
      "Game": [
        1704
      ],
      "GamesManager": [
        2039
      ],
      "MerkleProof": [
        527
      ]
    },
    "id": 2040,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1706,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "project:/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2040,
        "sourceUnit": 1705,
        "src": "65:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GamesManager",
        "contractDependencies": [
          1704
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2039,
        "linearizedBaseContracts": [
          2039
        ],
        "name": "GamesManager",
        "nameLocation": "96:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1712,
            "mutability": "mutable",
            "name": "joinableGamesMap",
            "nameLocation": "182:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "152:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_bool_$",
              "typeString": "mapping(contract Game => bool)"
            },
            "typeName": {
              "id": 1711,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1709,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1708,
                  "name": "Game",
                  "nameLocations": [
                    "160:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1704,
                  "src": "160:4:2"
                },
                "referencedDeclaration": 1704,
                "src": "160:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1704",
                  "typeString": "contract Game"
                }
              },
              "nodeType": "Mapping",
              "src": "152:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_bool_$",
                "typeString": "mapping(contract Game => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1710,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "168:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1716,
            "mutability": "mutable",
            "name": "joinableGames",
            "nameLocation": "260:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "245:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
              "typeString": "contract Game[]"
            },
            "typeName": {
              "baseType": {
                "id": 1714,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1713,
                  "name": "Game",
                  "nameLocations": [
                    "245:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1704,
                  "src": "245:4:2"
                },
                "referencedDeclaration": 1704,
                "src": "245:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1704",
                  "typeString": "contract Game"
                }
              },
              "id": 1715,
              "nodeType": "ArrayTypeName",
              "src": "245:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage_ptr",
                "typeString": "contract Game[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1721,
            "mutability": "mutable",
            "name": "joinableGamesIndexes",
            "nameLocation": "371:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "338:53:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_uint256_$",
              "typeString": "mapping(contract Game => uint256)"
            },
            "typeName": {
              "id": 1720,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1718,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1717,
                  "name": "Game",
                  "nameLocations": [
                    "346:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1704,
                  "src": "346:4:2"
                },
                "referencedDeclaration": 1704,
                "src": "346:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1704",
                  "typeString": "contract Game"
                }
              },
              "nodeType": "Mapping",
              "src": "338:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_uint256_$",
                "typeString": "mapping(contract Game => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1719,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "354:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1723,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "476:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 2039,
            "src": "460:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1722,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "460:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1724,
              "nodeType": "StructuredDocumentation",
              "src": "505:12:2",
              "text": "EVENTS///"
            },
            "eventSelector": "43ec5ca1a093170b11baf659159a896405b0393d8c5ce4a63c8dd450e2af0e5b",
            "id": 1733,
            "name": "NewGame",
            "nameLocation": "595:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "619:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "603:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1729,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "game",
                  "nameLocation": "633:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "628:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1704",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1728,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1727,
                      "name": "Game",
                      "nameLocations": [
                        "628:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1704,
                      "src": "628:4:2"
                    },
                    "referencedDeclaration": 1704,
                    "src": "628:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1704",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1731,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "small",
                  "nameLocation": "644:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "639:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:48:2"
            },
            "src": "589:62:2"
          },
          {
            "anonymous": false,
            "eventSelector": "07b29210dc1c79e9a69cc69e470ffe66a4cac664f90d5aae30dc519c5c78e53e",
            "id": 1740,
            "name": "JoinGame",
            "nameLocation": "712:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1735,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "737:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "721:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "game",
                  "nameLocation": "758:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "745:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1704",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1737,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1736,
                      "name": "Game",
                      "nameLocations": [
                        "745:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1704,
                      "src": "745:4:2"
                    },
                    "referencedDeclaration": 1704,
                    "src": "745:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1704",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:43:2"
            },
            "src": "706:58:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e2fe41c4bd195a4573c815ce24df9bdab82f85913f56314cd3225ce056ffb383",
            "id": 1744,
            "name": "NoGame",
            "nameLocation": "838:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "861:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1744,
                  "src": "845:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "844:24:2"
            },
            "src": "832:37:2"
          },
          {
            "anonymous": false,
            "eventSelector": "22223a77da257b62f2941c518a42d60b12781dbeaf07d25bfcdd00e1227732df",
            "id": 1748,
            "name": "GameNotValid",
            "nameLocation": "948:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1746,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "977:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "961:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:24:2"
            },
            "src": "942:43:2"
          },
          {
            "body": {
              "id": 1776,
              "nodeType": "Block",
              "src": "1177:261:2",
              "statements": [
                {
                  "assignments": [
                    1756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "mutability": "mutable",
                      "name": "newGame",
                      "nameLocation": "1221:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1776,
                      "src": "1216:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1704",
                        "typeString": "contract Game"
                      },
                      "typeName": {
                        "id": 1755,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1754,
                          "name": "Game",
                          "nameLocations": [
                            "1216:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1704,
                          "src": "1216:4:2"
                        },
                        "referencedDeclaration": 1704,
                        "src": "1216:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1764,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1240:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1244:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1240:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1762,
                        "name": "_small",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1751,
                        "src": "1252:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1231:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bool_$returns$_t_contract$_Game_$1704_$",
                        "typeString": "function (address,bool) returns (contract Game)"
                      },
                      "typeName": {
                        "id": 1758,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1757,
                          "name": "Game",
                          "nameLocations": [
                            "1235:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1704,
                          "src": "1235:4:2"
                        },
                        "referencedDeclaration": 1704,
                        "src": "1235:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      }
                    },
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1704",
                      "typeString": "contract Game"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1216:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1766,
                        "name": "newGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1756,
                        "src": "1304:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1765,
                      "name": "_addGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2038,
                      "src": "1295:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1704_$returns$__$",
                        "typeString": "function (contract Game)"
                      }
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:17:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1770,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1403:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1407:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1403:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1772,
                        "name": "newGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1756,
                        "src": "1415:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      {
                        "id": 1773,
                        "name": "_small",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1751,
                        "src": "1424:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1769,
                      "name": "NewGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1733,
                      "src": "1395:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1704_$_t_bool_$returns$__$",
                        "typeString": "function (address,contract Game,bool)"
                      }
                    },
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1775,
                  "nodeType": "EmitStatement",
                  "src": "1390:41:2"
                }
              ]
            },
            "documentation": {
              "id": 1749,
              "nodeType": "StructuredDocumentation",
              "src": "1031:15:2",
              "text": "FUNCTIONS///"
            },
            "functionSelector": "a35203c4",
            "id": 1777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createGame",
            "nameLocation": "1144:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "_small",
                  "nameLocation": "1160:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "1155:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:13:2"
            },
            "returnParameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:2"
            },
            "scope": 2039,
            "src": "1135:303:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1819,
              "nodeType": "Block",
              "src": "1552:529:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1659:24:2",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1783,
                          "name": "joinableGamesMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "1660:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_bool_$",
                            "typeString": "mapping(contract Game => bool)"
                          }
                        },
                        "id": 1785,
                        "indexExpression": {
                          "id": 1784,
                          "name": "_game",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1780,
                          "src": "1677:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1704",
                            "typeString": "contract Game"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1660:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1787,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1687:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1691:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1687:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1789,
                            "name": "_game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "1701:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1704",
                              "typeString": "contract Game"
                            }
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1707:5:2",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 581,
                          "src": "1701:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1701:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1687:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1659:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1801,
                  "nodeType": "IfStatement",
                  "src": "1655:135:2",
                  "trueBody": {
                    "id": 1800,
                    "nodeType": "Block",
                    "src": "1716:74:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1795,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1748:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1752:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1748:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1794,
                            "name": "GameNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1748,
                            "src": "1735:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1735:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1798,
                        "nodeType": "EmitStatement",
                        "src": "1730:29:2"
                      },
                      {
                        "functionReturnParameters": 1782,
                        "id": 1799,
                        "nodeType": "Return",
                        "src": "1773:7:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1805,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1859:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1863:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1859:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1802,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "1843:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      "id": 1804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1849:9:2",
                      "memberName": "matchJoin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 869,
                      "src": "1843:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1808,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1810,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "1949:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1809,
                      "name": "_removeGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2010,
                      "src": "1937:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1704_$returns$__$",
                        "typeString": "function (contract Game)"
                      }
                    },
                    "id": 1811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1812,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:18:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1814,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2056:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2060:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2056:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1816,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "2068:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1813,
                      "name": "JoinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "2047:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1704_$returns$__$",
                        "typeString": "function (address,contract Game)"
                      }
                    },
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1818,
                  "nodeType": "EmitStatement",
                  "src": "2042:32:2"
                }
              ]
            },
            "functionSelector": "2123bffc",
            "id": 1820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinGameByID",
            "nameLocation": "1518:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "1536:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "1531:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1704",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1779,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1778,
                      "name": "Game",
                      "nameLocations": [
                        "1531:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1704,
                      "src": "1531:4:2"
                    },
                    "referencedDeclaration": 1704,
                    "src": "1531:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1704",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:12:2"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:2"
            },
            "scope": 2039,
            "src": "1509:572:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1927,
              "nodeType": "Block",
              "src": "2122:1177:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1823,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "2137:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2151:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2137:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2160:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2137:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1834,
                  "nodeType": "IfStatement",
                  "src": "2133:98:2",
                  "trueBody": {
                    "id": 1833,
                    "nodeType": "Block",
                    "src": "2163:68:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1828,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2189:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2193:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2189:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1827,
                            "name": "NoGame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "2182:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2182:18:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1831,
                        "nodeType": "EmitStatement",
                        "src": "2177:23:2"
                      },
                      {
                        "functionReturnParameters": 1822,
                        "id": 1832,
                        "nodeType": "Return",
                        "src": "2214:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1836,
                      "mutability": "mutable",
                      "name": "random",
                      "nameLocation": "2318:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1927,
                      "src": "2310:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1835,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2310:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1857,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1846,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1843,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "2402:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1844,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2408:6:2",
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "2402:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1845,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2417:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2402:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1842,
                                    "name": "blockhash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967291,
                                    "src": "2392:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 1847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2392:27:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1848,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2421:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2425:6:2",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2421:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1850,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1723,
                                  "src": "2433:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1840,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2375:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2379:12:2",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2375:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2375:64:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1839,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "2348:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2348:105:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2327:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2327:136:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 1854,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "2466:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2480:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2466:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2327:159:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2310:176:2"
                },
                {
                  "expression": {
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2525:7:2",
                    "subExpression": {
                      "id": 1858,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1723,
                      "src": "2525:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1860,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:7:2"
                },
                {
                  "assignments": [
                    1862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1862,
                      "mutability": "mutable",
                      "name": "found",
                      "nameLocation": "2612:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1927,
                      "src": "2607:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1861,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2607:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1864,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2620:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2607:18:2"
                },
                {
                  "body": {
                    "id": 1917,
                    "nodeType": "Block",
                    "src": "2691:557:2",
                    "statements": [
                      {
                        "assignments": [
                          1878
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1878,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "2710:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1917,
                            "src": "2705:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1704",
                              "typeString": "contract Game"
                            },
                            "typeName": {
                              "id": 1877,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1876,
                                "name": "Game",
                                "nameLocations": [
                                  "2705:4:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1704,
                                "src": "2705:4:2"
                              },
                              "referencedDeclaration": 1704,
                              "src": "2705:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1704",
                                "typeString": "contract Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1886,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1879,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "2717:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 1885,
                          "indexExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1880,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1866,
                                  "src": "2732:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1881,
                                    "name": "joinableGames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1716,
                                    "src": "2736:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                      "typeString": "contract Game[] storage ref"
                                    }
                                  },
                                  "id": 1882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2750:6:2",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2736:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2732:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1884,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2731:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2717:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1704",
                            "typeString": "contract Game"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2705:53:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1887,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1878,
                                "src": "2829:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Game_$1704",
                                  "typeString": "contract Game"
                                }
                              },
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2834:5:2",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 581,
                              "src": "2829:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2829:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1890,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2845:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2849:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2845:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2829:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1916,
                        "nodeType": "IfStatement",
                        "src": "2825:413:2",
                        "trueBody": {
                          "id": 1915,
                          "nodeType": "Block",
                          "src": "2857:381:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1893,
                                  "name": "found",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1862,
                                  "src": "2875:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2883:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2875:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1896,
                              "nodeType": "ExpressionStatement",
                              "src": "2875:12:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1900,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2968:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2972:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2968:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1897,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1878,
                                    "src": "2953:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1704",
                                      "typeString": "contract Game"
                                    }
                                  },
                                  "id": 1899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2958:9:2",
                                  "memberName": "matchJoin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 869,
                                  "src": "2953:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 1902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2953:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1903,
                              "nodeType": "ExpressionStatement",
                              "src": "2953:26:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1905,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1878,
                                    "src": "3070:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1704",
                                      "typeString": "contract Game"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Game_$1704",
                                      "typeString": "contract Game"
                                    }
                                  ],
                                  "id": 1904,
                                  "name": "_removeGame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2010,
                                  "src": "3058:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1704_$returns$__$",
                                    "typeString": "function (contract Game)"
                                  }
                                },
                                "id": 1906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3058:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1907,
                              "nodeType": "ExpressionStatement",
                              "src": "3058:17:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1909,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3183:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3187:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3183:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1911,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1878,
                                    "src": "3195:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1704",
                                      "typeString": "contract Game"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_Game_$1704",
                                      "typeString": "contract Game"
                                    }
                                  ],
                                  "id": 1908,
                                  "name": "JoinGame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1740,
                                  "src": "3174:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1704_$returns$__$",
                                    "typeString": "function (address,contract Game)"
                                  }
                                },
                                "id": 1912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3174:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1913,
                              "nodeType": "EmitStatement",
                              "src": "3169:31:2"
                            },
                            {
                              "id": 1914,
                              "nodeType": "Break",
                              "src": "3218:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1869,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1866,
                      "src": "2660:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1870,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "2664:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2678:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2664:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2660:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1918,
                  "initializationExpression": {
                    "assignments": [
                      1866
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1866,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2648:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "2640:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1865,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2640:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1868,
                    "initialValue": {
                      "id": 1867,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1836,
                      "src": "2652:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2640:18:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2686:3:2",
                      "subExpression": {
                        "id": 1873,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1866,
                        "src": "2686:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1875,
                    "nodeType": "ExpressionStatement",
                    "src": "2686:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2635:613:2"
                },
                {
                  "condition": {
                    "id": 1920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3261:6:2",
                    "subExpression": {
                      "id": 1919,
                      "name": "found",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "3262:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1926,
                  "nodeType": "IfStatement",
                  "src": "3257:35:2",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1922,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3281:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3285:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3281:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1921,
                        "name": "NoGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "3274:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3274:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1925,
                    "nodeType": "EmitStatement",
                    "src": "3269:23:2"
                  }
                }
              ]
            },
            "functionSelector": "342ca184",
            "id": 1928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinRandomGame",
            "nameLocation": "2096:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:2:2"
            },
            "returnParameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:0:2"
            },
            "scope": 2039,
            "src": "2087:1212:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "3456:598:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1936,
                            "name": "joinableGamesMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "3473:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_bool_$",
                              "typeString": "mapping(contract Game => bool)"
                            }
                          },
                          "id": 1938,
                          "indexExpression": {
                            "id": 1937,
                            "name": "_game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "3490:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1704",
                              "typeString": "contract Game"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3473:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3500:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3473:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1935,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3466:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3466:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "3466:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1944,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "3522:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3536:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3522:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3545:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3522:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1943,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3515:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:32:2"
                },
                {
                  "expression": {
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3557:30:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1950,
                        "name": "joinableGamesMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "3564:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_bool_$",
                          "typeString": "mapping(contract Game => bool)"
                        }
                      },
                      "id": 1952,
                      "indexExpression": {
                        "id": 1951,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "3581:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3564:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:30:2"
                },
                {
                  "assignments": [
                    1956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1956,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "3606:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "3598:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3598:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1960,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1957,
                      "name": "joinableGamesIndexes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1721,
                      "src": "3614:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_uint256_$",
                        "typeString": "mapping(contract Game => uint256)"
                      }
                    },
                    "id": 1959,
                    "indexExpression": {
                      "id": 1958,
                      "name": "_game",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "3635:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1704",
                        "typeString": "contract Game"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3614:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3598:43:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1961,
                          "name": "joinableGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1716,
                          "src": "3705:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                            "typeString": "contract Game[] storage ref"
                          }
                        },
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3719:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3705:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3729:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3705:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1965,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "3734:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1966,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "3743:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3757:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3743:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3766:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3743:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3734:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3705:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2002,
                    "nodeType": "Block",
                    "src": "3819:184:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1978,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "3833:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 1980,
                            "indexExpression": {
                              "id": 1979,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1956,
                              "src": "3847:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3833:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1704",
                              "typeString": "contract Game"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1981,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "3856:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 1986,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1982,
                                  "name": "joinableGames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1716,
                                  "src": "3870:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                    "typeString": "contract Game[] storage ref"
                                  }
                                },
                                "id": 1983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3884:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3870:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3893:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3870:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3856:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1704",
                              "typeString": "contract Game"
                            }
                          },
                          "src": "3833:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1704",
                            "typeString": "contract Game"
                          }
                        },
                        "id": 1988,
                        "nodeType": "ExpressionStatement",
                        "src": "3833:62:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1989,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "3909:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 1991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3923:3:2",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3909:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_Game_$1704_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_Game_$1704_$dyn_storage_ptr_$",
                              "typeString": "function (contract Game[] storage pointer)"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3909:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1993,
                        "nodeType": "ExpressionStatement",
                        "src": "3909:19:2"
                      },
                      {
                        "expression": {
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1994,
                              "name": "joinableGamesIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1721,
                              "src": "3942:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_uint256_$",
                                "typeString": "mapping(contract Game => uint256)"
                              }
                            },
                            "id": 1998,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1995,
                                "name": "joinableGames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1716,
                                "src": "3963:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                  "typeString": "contract Game[] storage ref"
                                }
                              },
                              "id": 1997,
                              "indexExpression": {
                                "id": 1996,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1956,
                                "src": "3977:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3963:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1704",
                                "typeString": "contract Game"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3942:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1999,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1956,
                            "src": "3987:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3942:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2001,
                        "nodeType": "ExpressionStatement",
                        "src": "3942:50:2"
                      }
                    ]
                  },
                  "id": 2003,
                  "nodeType": "IfStatement",
                  "src": "3701:302:2",
                  "trueBody": {
                    "id": 1977,
                    "nodeType": "Block",
                    "src": "3769:44:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1972,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "3783:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 1974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3797:3:2",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3783:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_Game_$1704_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_Game_$1704_$dyn_storage_ptr_$",
                              "typeString": "function (contract Game[] storage pointer)"
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3783:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1976,
                        "nodeType": "ExpressionStatement",
                        "src": "3783:19:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4013:34:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2004,
                        "name": "joinableGamesIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1721,
                        "src": "4020:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_uint256_$",
                          "typeString": "mapping(contract Game => uint256)"
                        }
                      },
                      "id": 2006,
                      "indexExpression": {
                        "id": 2005,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "4041:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4020:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "4013:34:2"
                }
              ]
            },
            "documentation": {
              "id": 1929,
              "nodeType": "StructuredDocumentation",
              "src": "3323:13:2",
              "text": "HELPERS///"
            },
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeGame",
            "nameLocation": "3423:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "3440:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "3435:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1704",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1931,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1930,
                      "name": "Game",
                      "nameLocations": [
                        "3435:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1704,
                      "src": "3435:4:2"
                    },
                    "referencedDeclaration": 1704,
                    "src": "3435:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1704",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3434:12:2"
            },
            "returnParameters": {
              "id": 1934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3456:0:2"
            },
            "scope": 2039,
            "src": "3414:640:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2037,
              "nodeType": "Block",
              "src": "4144:146:2",
              "statements": [
                {
                  "expression": {
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2016,
                        "name": "joinableGamesMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "4154:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_bool_$",
                          "typeString": "mapping(contract Game => bool)"
                        }
                      },
                      "id": 2018,
                      "indexExpression": {
                        "id": 2017,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4171:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4154:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4180:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4154:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2021,
                  "nodeType": "ExpressionStatement",
                  "src": "4154:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2025,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4213:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      ],
                      "expression": {
                        "id": 2022,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "4194:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4208:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4194:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Game_$1704_$dyn_storage_ptr_$_t_contract$_Game_$1704_$returns$__$attached_to$_t_array$_t_contract$_Game_$1704_$dyn_storage_ptr_$",
                        "typeString": "function (contract Game[] storage pointer,contract Game)"
                      }
                    },
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4194:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2027,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:25:2"
                },
                {
                  "expression": {
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2028,
                        "name": "joinableGamesIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1721,
                        "src": "4229:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1704_$_t_uint256_$",
                          "typeString": "mapping(contract Game => uint256)"
                        }
                      },
                      "id": 2030,
                      "indexExpression": {
                        "id": 2029,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "4250:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1704",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4229:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2031,
                          "name": "joinableGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1716,
                          "src": "4259:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Game_$1704_$dyn_storage",
                            "typeString": "contract Game[] storage ref"
                          }
                        },
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4273:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4259:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4282:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4259:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4229:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2036,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:54:2"
                }
              ]
            },
            "id": 2038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addGame",
            "nameLocation": "4114:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "4128:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2038,
                  "src": "4123:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1704",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 2012,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2011,
                      "name": "Game",
                      "nameLocations": [
                        "4123:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1704,
                      "src": "4123:4:2"
                    },
                    "referencedDeclaration": 1704,
                    "src": "4123:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1704",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4122:12:2"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4144:0:2"
            },
            "scope": 2039,
            "src": "4105:185:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2040,
        "src": "87:4205:2",
        "usedErrors": []
      }
    ],
    "src": "32:4261:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1688914673370": {
      "events": {},
      "links": {},
      "address": "0x10f100f36Db6a8Fa12Af0cC59fC9FB26c92F3f42",
      "transactionHash": "0xae2100d1b1c8cd1a1d211f01eb8dde84cedede96788d3adf02136b1f3f61dcfc"
    },
    "1688974547411": {
      "events": {},
      "links": {},
      "address": "0xFE6d8e42462696A8Fc7c73d37102cB1851e3C857",
      "transactionHash": "0x14de64a0890b06c959f61e9080dc710e885b3e2712c8bcf6247ec4541034ae2c"
    },
    "1688980805014": {
      "events": {},
      "links": {},
      "address": "0xf866fF8aDe06c565e688B61CCc4ad3C3CF5fAB08",
      "transactionHash": "0x787dbec0757907c350746686dde45847eea2ed543854a816952845d89feb2728"
    },
    "1689000522686": {
      "events": {},
      "links": {},
      "address": "0x3FbD748B6a7c46369f5aC98f3135BcB469DCec30",
      "transactionHash": "0x483acdd9cfc6725d228697b62f3e871f55209ed26974328bc3573803101126e4"
    },
    "1689017842762": {
      "events": {},
      "links": {},
      "address": "0x3F6a11Cf4A4f379DE115Adbe0d2292F2CC722758",
      "transactionHash": "0xcd76e811b6740b9b656ef398c09f70aaaf21fcfff6ebff5b6ffc511e13ebd8c5"
    },
    "1689028406002": {
      "events": {},
      "links": {},
      "address": "0x0e4a23c1273ad81e33e301dF6BFF2e833A98Ce4a",
      "transactionHash": "0x3353a4e278dfa8889104117f8289d0fd2673810308d1d1dab2c1030bf4b5a9a6"
    },
    "1689057727468": {
      "events": {},
      "links": {},
      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
      "transactionHash": "0x36be102049528212acee0bb12974a2a8323709e22b26183aedfa3460babe7d06"
    },
    "1689065551941": {
      "events": {},
      "links": {},
      "address": "0xDf3Cf8b9978c9c5639E06da3bfF5014ab5c055d1",
      "transactionHash": "0x616d12d8cb2fa52990b580279b5eda64f847b16d7c0d9d30fa4079a30707167b"
    },
    "1689066337655": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x953f9411518c973a64e4027bd87694857336366e7c2d23cab1edd6734547dc01"
    },
    "1689066515736": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x953f9411518c973a64e4027bd87694857336366e7c2d23cab1edd6734547dc01"
    },
    "1689066735824": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x953f9411518c973a64e4027bd87694857336366e7c2d23cab1edd6734547dc01"
    },
    "1689067699439": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689067841969": {
      "events": {},
      "links": {},
      "address": "0xaD888d0Ade988EbEe74B8D4F39BF29a8d0fe8A8D",
      "transactionHash": "0xd7d694b5cd186f1583c1833df5edef91c36d60da9c27b2ffa2cb49f7b847cf14"
    },
    "1689088588406": {
      "events": {},
      "links": {},
      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
      "transactionHash": "0x63844c36200ce5eb6482cc8e19b411e6692a5994916d45d530ef3e64b9d3c590"
    },
    "1689088614781": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689097223624": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689111721100": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689112020354": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689143774841": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689145922257": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689146253608": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689169285846": {
      "events": {},
      "links": {},
      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
      "transactionHash": "0x96e86fe50207fa7edcc5e4ebc85397bf2b207c45fcb24a54a3aa36f5cb0b4028"
    },
    "1689169942451": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0xd4ecd66b3a17af149f156b446387b2e7761f43431a777325dab1d88b4b8aabdd"
    },
    "1689170187516": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0xd4ecd66b3a17af149f156b446387b2e7761f43431a777325dab1d88b4b8aabdd"
    },
    "1689171886477": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x4b2922341c7d60ccc008d6c7e0177f392e1ead0b3e6f07a10bf7387fe61d70c3"
    },
    "1689187548541": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x4b2922341c7d60ccc008d6c7e0177f392e1ead0b3e6f07a10bf7387fe61d70c3"
    },
    "1689229057940": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x4b2922341c7d60ccc008d6c7e0177f392e1ead0b3e6f07a10bf7387fe61d70c3"
    },
    "1689237297680": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x069340a2a8bea5d0dd980bb80f30b37c89134b864e899c0b10d36209c4c27e72"
    },
    "1689241063777": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0xc8ababaa5a051ed4270b86cde5eebd08969853440f42d2a599375f56df163910"
    },
    "1689241376520": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0xc8ababaa5a051ed4270b86cde5eebd08969853440f42d2a599375f56df163910"
    },
    "1689271590752": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0xc8ababaa5a051ed4270b86cde5eebd08969853440f42d2a599375f56df163910"
    },
    "1689271895894": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0xc8ababaa5a051ed4270b86cde5eebd08969853440f42d2a599375f56df163910"
    },
    "1689296146742": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x4b2922341c7d60ccc008d6c7e0177f392e1ead0b3e6f07a10bf7387fe61d70c3"
    },
    "1689323642355": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x4b2922341c7d60ccc008d6c7e0177f392e1ead0b3e6f07a10bf7387fe61d70c3"
    },
    "1689343861124": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689344222950": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689348929442": {
      "events": {},
      "links": {},
      "address": "0xFc5E2b5961D05Fab713D8c01a343e7eE4F470a0A",
      "transactionHash": "0x552816d4d329e702d2a28b99cbd64d62b87d53f510f196d21693eaf5f33a519c"
    },
    "1689349373662": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689349881268": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689363320181": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689373503449": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689373774032": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x7a01f1e0a6233c7e734dc7200ab8143e3d8dfe7c97e28dc80f100e3a2a953d68"
    },
    "1689407061028": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x451c94522ec4e11fc2678b601c24feb4db3a8dd48efcf13df70f4c66e99499b4"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-07-15T07:46:54.253Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewGame(address,address,bool)": {
        "notice": "EVENTS///"
      }
    },
    "kind": "user",
    "methods": {
      "createGame(bool)": {
        "notice": "FUNCTIONS///"
      }
    },
    "version": 1
  }
}