{
  "contractName": "GamesManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "GameNotValid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Game",
          "name": "game",
          "type": "address"
        }
      ],
      "name": "JoinGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract Game",
          "name": "game",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "small",
          "type": "bool"
        }
      ],
      "name": "NewGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "NoGame",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_small",
          "type": "bool"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Game",
          "name": "_game",
          "type": "address"
        }
      ],
      "name": "joinGameByID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinRandomGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameNotValid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Game\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"JoinGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Game\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"small\",\"type\":\"bool\"}],\"name\":\"NewGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"NoGame\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_small\",\"type\":\"bool\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Game\",\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"joinGameByID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinRandomGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"NewGame(address,address,bool)\":{\"notice\":\"EVENTS///\"}},\"kind\":\"user\",\"methods\":{\"createGame(bool)\":{\"notice\":\"FUNCTIONS///\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GamesManager.sol\":\"GamesManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"project:/contracts/Game.sol\":{\"keccak256\":\"0x4b3d1c0a8d89a26e012ca3e4f988ef8ce74ed8fd1a3cfb643283b4ff427c0304\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c8a8b2b7a248934481ba5111766c354b737f5145772e12a2cc75be092d71e59\",\"dweb:/ipfs/Qmc5cChGKjMeUxgLqNEDPVDZBvgb5V1yopBmw9JKwfrHva\"]},\"project:/contracts/GamesManager.sol\":{\"keccak256\":\"0x7e4fea7d6b2a3d9b9ee1c6e1156ac62c48c501ed4141567fb1a7a98c0994ffe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1bb4d649589511efa6f4f405de29e7db0defc225d702c751495fcd0fa8bad6c\",\"dweb:/ipfs/QmT7m8fLCYsDseAuHUhUmgocNSKpGC4uNgSNbTPwDsajhS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c80632123bffc146200004b578063342ca184146200006b578063a35203c41462000077575b600080fd5b62000069600480360381019062000063919062000b63565b62000097565b005b62000075620002b3565b005b6200009560048036038101906200008f919062000bd2565b620005d2565b005b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615806200018c57508073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000137573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015d919062000c35565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15620001db573373ffffffffffffffffffffffffffffffffffffffff167f22223a77da257b62f2941c518a42d60b12781dbeaf07d25bfcdd00e1227732df60405160405180910390a2620002b0565b8073ffffffffffffffffffffffffffffffffffffffff1663fadca01e336040518263ffffffff1660e01b815260040162000216919062000c78565b600060405180830381600087803b1580156200023157600080fd5b505af115801562000246573d6000803e3d6000fd5b50505050620002558162000672565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f07b29210dc1c79e9a69cc69e470ffe66a4cac664f90d5aae30dc519c5c78e53e60405160405180910390a35b50565b6001808054905010156200030a573373ffffffffffffffffffffffffffffffffffffffff167fe2fe41c4bd195a4573c815ce24df9bdab82f85913f56314cd3225ce056ffb38360405160405180910390a2620005d0565b600060018054905060014362000321919062000cce565b40336003546040516020016200033a9392919062000dad565b6040516020818303038152906040528051906020012060001c6200035f919062000e1f565b905060036000815480929190620003769062000e57565b91905055506000808290505b600180549050811015620005825760006001808054905083620003a6919062000e1f565b81548110620003ba57620003b962000ea4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200044a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000470919062000c35565b73ffffffffffffffffffffffffffffffffffffffff16146200056b57600192508073ffffffffffffffffffffffffffffffffffffffff1663fadca01e336040518263ffffffff1660e01b8152600401620004cb919062000c78565b600060405180830381600087803b158015620004e657600080fd5b505af1158015620004fb573d6000803e3d6000fd5b505050506200050a8162000672565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f07b29210dc1c79e9a69cc69e470ffe66a4cac664f90d5aae30dc519c5c78e53e60405160405180910390a35062000582565b508080620005799062000e57565b91505062000382565b5080620005cd573373ffffffffffffffffffffffffffffffffffffffff167fe2fe41c4bd195a4573c815ce24df9bdab82f85913f56314cd3225ce056ffb38360405160405180910390a25b50505b565b60003382604051620005e49062000ad7565b620005f192919062000ee4565b604051809103906000f0801580156200060e573d6000803e3d6000fd5b5090506200061c81620009c4565b3373ffffffffffffffffffffffffffffffffffffffff167f43ec5ca1a093170b11baf659159a896405b0393d8c5ce4a63c8dd450e2af0e5b82846040516200066692919062000f7c565b60405180910390a25050565b600115156000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514620006d557620006d462000fa9565b5b600060018054905011620006ee57620006ed62000fa9565b5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690556000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600180805490501480620007a5575060018080549050620007a2919062000cce565b81145b15620007fb576001805480620007c057620007bf62000fd8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556200097d565b60018080805490506200080f919062000cce565b8154811062000823576200082262000ea4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001828154811062000865576200086462000ea4565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001805480620008c257620008c162000fd8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905580600260006001848154811062000913576200091262000ea4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808054905062000a91919062000cce565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b614720806200100883390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000b178262000aea565b9050919050565b600062000b2b8262000b0a565b9050919050565b62000b3d8162000b1e565b811462000b4957600080fd5b50565b60008135905062000b5d8162000b32565b92915050565b60006020828403121562000b7c5762000b7b62000ae5565b5b600062000b8c8482850162000b4c565b91505092915050565b60008115159050919050565b62000bac8162000b95565b811462000bb857600080fd5b50565b60008135905062000bcc8162000ba1565b92915050565b60006020828403121562000beb5762000bea62000ae5565b5b600062000bfb8482850162000bbb565b91505092915050565b62000c0f8162000b0a565b811462000c1b57600080fd5b50565b60008151905062000c2f8162000c04565b92915050565b60006020828403121562000c4e5762000c4d62000ae5565b5b600062000c5e8482850162000c1e565b91505092915050565b62000c728162000b0a565b82525050565b600060208201905062000c8f600083018462000c67565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000cdb8262000c95565b915062000ce88362000c95565b925082820390508181111562000d035762000d0262000c9f565b5b92915050565b6000819050919050565b6000819050919050565b62000d3262000d2c8262000d09565b62000d13565b82525050565b60008160601b9050919050565b600062000d528262000d38565b9050919050565b600062000d668262000d45565b9050919050565b62000d8262000d7c8262000b0a565b62000d59565b82525050565b6000819050919050565b62000da762000da18262000c95565b62000d88565b82525050565b600062000dbb828662000d1d565b60208201915062000dcd828562000d6d565b60148201915062000ddf828462000d92565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000e2c8262000c95565b915062000e398362000c95565b92508262000e4c5762000e4b62000df0565b5b828206905092915050565b600062000e648262000c95565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000e995762000e9862000c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b62000ede8162000b95565b82525050565b600060408201905062000efb600083018562000c67565b62000f0a602083018462000ed3565b9392505050565b6000819050919050565b600062000f3c62000f3662000f308462000aea565b62000f11565b62000aea565b9050919050565b600062000f508262000f1b565b9050919050565b600062000f648262000f43565b9050919050565b62000f768162000f57565b82525050565b600060408201905062000f93600083018562000f6b565b62000fa2602083018462000ed3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe60806040523480156200001157600080fd5b506040516200472038038062004720833981810160405281019062000037919062000214565b81600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806200009f576040600160006101000a81548160ff021916908360ff1602179055620000bb565b6010600160006101000a81548160ff021916908360ff16021790555b5080620000e257600a6001806101000a81548160ff021916908360ff1602179055620000fd565b60056001806101000a81548160ff021916908360ff16021790555b506000600760146101000a81548160ff021916908360068111156200012757620001266200025b565b5b02179055507f2ed32fef419990048899fb76d9c3c710ad99dc18911f08a69a3a85807c636673816040516200015d91906200029b565b60405180910390a15050620002b8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019f8262000172565b9050919050565b620001b18162000192565b8114620001bd57600080fd5b50565b600081519050620001d181620001a6565b92915050565b60008115159050919050565b620001ee81620001d7565b8114620001fa57600080fd5b50565b6000815190506200020e81620001e3565b92915050565b600080604083850312156200022e576200022d6200016d565b5b60006200023e85828601620001c0565b92505060206200025185828601620001fd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6200029581620001d7565b82525050565b6000602082019050620002b260008301846200028a565b92915050565b61445880620002c86000396000f3fe60806040526004361061019c5760003560e01c8063a562ea3b116100ec578063e35d284b1161008a578063ea66144a11610064578063ea66144a14610527578063f5126b6b14610550578063f87a63001461057b578063fadca01e146105a65761019c565b8063e35d284b14610496578063e65e8492146104c1578063e75e0e5b146104fe5761019c565b8063cc12f58e116100c6578063cc12f58e14610400578063d43faafd1461042b578063dfbf53ae14610454578063e25387e41461047f5761019c565b8063a562ea3b14610395578063bcc9f3e6146103ac578063c51d69f4146103d55761019c565b80633ccfd60b116101595780638b299903116101335780638b299903146102fd5780638b80aac4146103285780638da5cb5b14610353578063980202d11461037e5761019c565b80633ccfd60b14610292578063577c87cb146102a95780636c0c27e1146102d45761019c565b806311610c25146101a15780631999eca8146101cc5780631bb565d6146101f55780631c253fd2146102205780631e20ddab1461025d5780633951be8714610267575b600080fd5b3480156101ad57600080fd5b506101b66105cf565b6040516101c391906134d7565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee919061353f565b6105d5565b005b34801561020157600080fd5b5061020a61067b565b60405161021791906134d7565b60405180910390f35b34801561022c57600080fd5b50610247600480360381019061024291906135ca565b610681565b60405161025491906134d7565b60405180910390f35b610265610699565b005b34801561027357600080fd5b5061027c61099f565b604051610289919061366e565b60405180910390f35b34801561029e57600080fd5b506102a76109b2565b005b3480156102b557600080fd5b506102be610abf565b6040516102cb9190613698565b60405180910390f35b3480156102e057600080fd5b506102fb60048036038101906102f691906136df565b610ac4565b005b34801561030957600080fd5b50610312610def565b60405161031f919061371b565b60405180910390f35b34801561033457600080fd5b5061033d610e15565b60405161034a919061371b565b60405180910390f35b34801561035f57600080fd5b50610368610e3b565b604051610375919061371b565b60405180910390f35b34801561038a57600080fd5b50610393610e61565b005b3480156103a157600080fd5b506103aa611050565b005b3480156103b857600080fd5b506103d360048036038101906103ce9190613b46565b6114b6565b005b3480156103e157600080fd5b506103ea61170d565b6040516103f79190613698565b60405180910390f35b34801561040c57600080fd5b50610415611720565b6040516104229190613698565b60405180910390f35b34801561043757600080fd5b50610452600480360381019061044d91906136df565b611725565b005b34801561046057600080fd5b506104696118ac565b604051610476919061371b565b60405180910390f35b34801561048b57600080fd5b506104946118d2565b005b3480156104a257600080fd5b506104ab611b1a565b6040516104b89190613698565b60405180910390f35b3480156104cd57600080fd5b506104e860048036038101906104e391906135ca565b611b1f565b6040516104f59190613d82565b60405180910390f35b34801561050a57600080fd5b5061052560048036038101906105209190613da4565b611c14565b005b34801561053357600080fd5b5061054e60048036038101906105499190613e3b565b61245f565b005b34801561055c57600080fd5b506105656129e0565b6040516105729190613698565b60405180910390f35b34801561058757600080fd5b506105906129e5565b60405161059d9190613698565b60405180910390f35b3480156105b257600080fd5b506105cd60048036038101906105c891906135ca565b6129f6565b005b60055481565b600460068111156105e9576105e86135f7565b5b600760149054906101000a900460ff16600681111561060b5761060a6135f7565b5b1461061557600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f57600080fd5b61067881612b36565b50565b60005481565b60046020528060005260406000206000915090505481565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107425750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61074b57600080fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161515036107ab57600080fd5b600260068111156107bf576107be6135f7565b5b600760149054906101000a900460ff1660068111156107e1576107e06135f7565b5b146107eb57600080fd5b60055434146107f957600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555060036000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff168015610940575060036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff165b1561099d577fd2d72fde7537c550b5e85eabb70a65949c78bb66328f56c78ddc8251950a994160405160405180910390a16003600760146101000a81548160ff02191690836006811115610997576109966135f7565b5b02179055505b565b600760149054906101000a900460ff1681565b6006808111156109c5576109c46135f7565b5b600760149054906101000a900460ff1660068111156109e7576109e66135f7565b5b146109f157600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4b57600080fd5b6006600760146101000a81548160ff02191690836006811115610a7157610a706135f7565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610abc573d6000803e3d6000fd5b50565b601081565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b6d5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b7657600080fd5b60016006811115610b8a57610b896135f7565b5b600760149054906101000a900460ff166006811115610bac57610bab6135f7565b5b14610bb657600080fd5b60008114158015610d445750600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610c7f57508060046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b80610d435750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610d4257508060046000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b5b5b610d83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7a90613eeb565b60405180910390fd5b806005819055506002600760146101000a81548160ff02191690836006811115610db057610daf6135f7565b5b02179055507f50ac8120affab45c80b99be15eba8c23598651f799d4ad1c2e0c91f92e7e23b181604051610de491906134d7565b60405180910390a150565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f0a5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610f1357600080fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514610f7357600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ff257600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611016565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90507f6c9cf2445bc4d4b02c43eb0924c873077e36d28844f81ffc0111f037d6ce801960405160405180910390a161104d81612ee5565b50565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110f95750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61110257600080fd5b60036006811115611116576111156135f7565b5b600760149054906101000a900460ff166006811115611138576111376135f7565b5b1480611177575060046006811115611153576111526135f7565b5b600760149054906101000a900460ff166006811115611175576111746135f7565b5b145b61118057600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111ff57600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611223565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561127f57600080fd5b60036006811115611293576112926135f7565b5b600760149054906101000a900460ff1660068111156112b5576112b46135f7565b5b03611342576000801b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414611341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133890613f7d565b60405180910390fd5b5b60046006811115611356576113556135f7565b5b600760149054906101000a900460ff166006811115611378576113776135f7565b5b0361140e578073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114049061400f565b60405180910390fd5b5b7f1a57b5e70fad11389febe9938025db4c3ee52d0bde2fcf22527149b81444c2ca8160405161143d919061371b565b60405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055506005436114ad919061405e565b60008190555050565b600560068111156114ca576114c96135f7565b5b600760149054906101000a900460ff1660068111156114ec576114eb6135f7565b5b146114f657600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461155057600080fd5b815183511461155e57600080fd5b805183511461156c57600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115eb57600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661160f565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905060006116638787878787600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154612f8b565b6116775761167082612ee5565b5050611706565b60018054906101000a900460ff1660ff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16826116e39190614092565b60ff16036116f9576116f433612ee5565b611703565b61170282612ee5565b5b50505b5050505050565b600160009054906101000a900460ff1681565b604081565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806117ce5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6117d757600080fd5b600160068111156117eb576117ea6135f7565b5b600760149054906101000a900460ff16600681111561180d5761180c6135f7565b5b1461181757600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f4a8a2c0cf89add878b8fd9d1a4868d4b9536b6cbedec55c1b1eb3a5fa4cfdca2826040516118a191906134d7565b60405180910390a250565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061197b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61198457600080fd5b60036006811115611998576119976135f7565b5b600760149054906101000a900460ff1660068111156119ba576119b96135f7565b5b14806119f95750600460068111156119d5576119d46135f7565b5b600760149054906101000a900460ff1660068111156119f7576119f66135f7565b5b145b611a0257600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a8157600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611aa5565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff168015611b0557506000544310155b611b0e57600080fd5b611b1733612ee5565b50565b600a81565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015611c09578382906000526020600020016040518060400160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900460ff166002811115611be457611be36135f7565b5b6002811115611bf657611bf56135f7565b5b8152505081526020019060010190611b83565b505050509050919050565b60046006811115611c2857611c276135f7565b5b600760149054906101000a900460ff166006811115611c4a57611c496135f7565b5b14611c5457600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cae57600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d2d57600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d51565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615611e845760005443108015611e055750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff165b15611e6a576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550611e83565b6000544310611e8257611e7c81612ee5565b50612458565b5b5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f0357600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f27565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905060006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180549050611f7d91906140c7565b905060006002811115611f9357611f926135f7565b5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018281548110611fe757611fe66140fb565b5b9060005260206000200160000160019054906101000a900460ff166002811115612014576120136135f7565b5b146120225761202161412a565b5b8560ff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301828154811061207a576120796140fb565b5b9060005260206000200160000160009054906101000a900460ff1660ff16146120a257600080fd5b6120f188888888600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461308b565b61219f577fe48a335438ec9cf1059d7b134553ca861398a18d023bd34b9e4d956f5f7ba00482604051612124919061371b565b60405180910390a16005600760146101000a81548160ff02191690836006811115612152576121516135f7565b5b021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050612456565b87156123bf576001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030182815481106121fb576121fa6140fb565b5b9060005260206000200160000160016101000a81548160ff0219169083600281111561222a576122296135f7565b5b0217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600081819054906101000a900460ff168092919061228e90614159565b91906101000a81548160ff021916908360ff1602179055505060018054906101000a900460ff1660ff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660ff16036123ba5781600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506005600760146101000a81548160ff02191690836006811115612377576123766135f7565b5b02179055507f745c90b656b4aafe296c8ca35aeacfe56cb96c90e1d320e5da643fff1051b6c0826040516123ab919061371b565b60405180910390a15050612456565b61244a565b6002600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018281548110612415576124146140fb565b5b9060005260206000200160000160016101000a81548160ff02191690836002811115612444576124436135f7565b5b02179055505b61245384612b36565b50505b505b5050505050565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806125085750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61251157600080fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461259057600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166125b4565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156126e757600054431080156126685750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff165b156126cd576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055506126e6565b60005443106126e5576126df81612ee5565b506129dd565b5b5b600360068111156126fb576126fa6135f7565b5b600760149054906101000a900460ff16600681111561271d5761271c6135f7565b5b1461272757600080fd5b6000801b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461277857600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000801b60036000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415801561289d57506000801b60036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414155b156129db577f48c0ac148c6adb019cea448b4b78c69778a7b6abdfadce9a6acdc8b983e94bee60405160405180910390a1600060036000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908360ff1602179055506004600760146101000a81548160ff02191690836006811115612972576129716135f7565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b50565b600581565b60018054906101000a900460ff1681565b60006006811115612a0a57612a096135f7565b5b600760149054906101000a900460ff166006811115612a2c57612a2b6135f7565b5b14612a3657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612abe906141ce565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600760146101000a81548160ff02191690836006811115612b2e57612b2d6135f7565b5b021790555050565b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008360ff1660ff16815260200190815260200160002060009054906101000a900460ff16151514612be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bda9061423a565b60405180910390fd5b600160009054906101000a900460ff1660ff168160ff1610612c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c31906142cc565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008360ff1660ff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160405180604001604052808360ff16815260200160006002811115612d1657612d156135f7565b5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff02191690836002811115612d8a57612d896135f7565b5b021790555050503373ffffffffffffffffffffffffffffffffffffffff167f665e09da1c684bb4ada2b5c04fe0bb20328ca455aae1928734e0a40dcf0e099e82604051612dd79190613698565b60405180910390a2600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612e7e57600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612ea2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7fe48a335438ec9cf1059d7b134553ca861398a18d023bd34b9e4d956f5f7ba00481604051612f14919061371b565b60405180910390a180600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600760146101000a81548160ff02191690836006811115612f8357612f826135f7565b5b021790555050565b600080855167ffffffffffffffff811115612fa957612fa861374c565b5b604051908082528060200260200182016040528015612fd75781602001602082028036833780820191505090505b50905060005b86518110156130715761303f878281518110612ffc57612ffb6140fb565b5b6020026020010151878381518110613017576130166140fb565b5b6020026020010151878481518110613032576130316140fb565b5b60200260200101516130b2565b828281518110613052576130516140fb565b5b6020026020010181815250508080613069906142ec565b915050612fdd565b5061307e8888858461310e565b9150509695505050505050565b6000806130998787876130b2565b90506130a6848483613127565b91505095945050505050565b60008383836040516020016130c993929190614343565b604051602081830303815290604052805190602001206040516020016130ef919061439b565b6040516020818303038152906040528051906020012090509392505050565b60008261311c86868561313e565b149050949350505050565b6000826131348584613426565b1490509392505050565b600080825190506000855190506000855190508060018385613160919061405e565b61316a91906140c7565b146131aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131a190614402565b60405180910390fd5b60008167ffffffffffffffff8111156131c6576131c561374c565b5b6040519080825280602002602001820160405280156131f45781602001602082028036833780820191505090505b5090506000806000805b8581101561334e57600088851061323b5785848061321b906142ec565b95508151811061322e5761322d6140fb565b5b6020026020010151613263565b8a8580613247906142ec565b96508151811061325a576132596140fb565b5b60200260200101515b905060008c838151811061327a576132796140fb565b5b60200260200101516132b2578d8480613292906142ec565b9550815181106132a5576132a46140fb565b5b602002602001015161330e565b8986106132e5578685806132c5906142ec565b9650815181106132d8576132d76140fb565b5b602002602001015161330d565b8b86806132f1906142ec565b975081518110613304576133036140fb565b5b60200260200101515b5b905061331a828261347c565b87848151811061332d5761332c6140fb565b5b60200260200101818152505050508080613346906142ec565b9150506131fe565b5060008511156133c65785811461339a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161339190614402565b60405180910390fd5b8360018603815181106133b0576133af6140fb565b5b602002602001015197505050505050505061341f565b60008711156133f957886000815181106133e3576133e26140fb565b5b602002602001015197505050505050505061341f565b8a60008151811061340d5761340c6140fb565b5b60200260200101519750505050505050505b9392505050565b60008082905060005b84518110156134715761345c8286838151811061344f5761344e6140fb565b5b602002602001015161347c565b91508080613469906142ec565b91505061342f565b508091505092915050565b60008183106134945761348f82846134a7565b61349f565b61349e83836134a7565b5b905092915050565b600082600052816020526040600020905092915050565b6000819050919050565b6134d1816134be565b82525050565b60006020820190506134ec60008301846134c8565b92915050565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b61351c81613506565b811461352757600080fd5b50565b60008135905061353981613513565b92915050565b600060208284031215613555576135546134fc565b5b60006135638482850161352a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006135978261356c565b9050919050565b6135a78161358c565b81146135b257600080fd5b50565b6000813590506135c48161359e565b92915050565b6000602082840312156135e0576135df6134fc565b5b60006135ee848285016135b5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110613637576136366135f7565b5b50565b600081905061364882613626565b919050565b60006136588261363a565b9050919050565b6136688161364d565b82525050565b6000602082019050613683600083018461365f565b92915050565b61369281613506565b82525050565b60006020820190506136ad6000830184613689565b92915050565b6136bc816134be565b81146136c757600080fd5b50565b6000813590506136d9816136b3565b92915050565b6000602082840312156136f5576136f46134fc565b5b6000613703848285016136ca565b91505092915050565b6137158161358c565b82525050565b6000602082019050613730600083018461370c565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6137848261373b565b810181811067ffffffffffffffff821117156137a3576137a261374c565b5b80604052505050565b60006137b66134f2565b90506137c2828261377b565b919050565b600067ffffffffffffffff8211156137e2576137e161374c565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61380b816137f8565b811461381657600080fd5b50565b60008135905061382881613802565b92915050565b600061384161383c846137c7565b6137ac565b90508083825260208201905060208402830185811115613864576138636137f3565b5b835b8181101561388d57806138798882613819565b845260208401935050602081019050613866565b5050509392505050565b600082601f8301126138ac576138ab613736565b5b81356138bc84826020860161382e565b91505092915050565b600067ffffffffffffffff8211156138e0576138df61374c565b5b602082029050602081019050919050565b60008115159050919050565b613906816138f1565b811461391157600080fd5b50565b600081359050613923816138fd565b92915050565b600061393c613937846138c5565b6137ac565b9050808382526020820190506020840283018581111561395f5761395e6137f3565b5b835b8181101561398857806139748882613914565b845260208401935050602081019050613961565b5050509392505050565b600082601f8301126139a7576139a6613736565b5b81356139b7848260208601613929565b91505092915050565b600067ffffffffffffffff8211156139db576139da61374c565b5b602082029050602081019050919050565b60006139ff6139fa846139c0565b6137ac565b90508083825260208201905060208402830185811115613a2257613a216137f3565b5b835b81811015613a4b5780613a3788826136ca565b845260208401935050602081019050613a24565b5050509392505050565b600082601f830112613a6a57613a69613736565b5b8135613a7a8482602086016139ec565b91505092915050565b600067ffffffffffffffff821115613a9e57613a9d61374c565b5b602082029050602081019050919050565b6000613ac2613abd84613a83565b6137ac565b90508083825260208201905060208402830185811115613ae557613ae46137f3565b5b835b81811015613b0e5780613afa888261352a565b845260208401935050602081019050613ae7565b5050509392505050565b600082601f830112613b2d57613b2c613736565b5b8135613b3d848260208601613aaf565b91505092915050565b600080600080600060a08688031215613b6257613b616134fc565b5b600086013567ffffffffffffffff811115613b8057613b7f613501565b5b613b8c88828901613897565b955050602086013567ffffffffffffffff811115613bad57613bac613501565b5b613bb988828901613992565b945050604086013567ffffffffffffffff811115613bda57613bd9613501565b5b613be688828901613992565b935050606086013567ffffffffffffffff811115613c0757613c06613501565b5b613c1388828901613a55565b925050608086013567ffffffffffffffff811115613c3457613c33613501565b5b613c4088828901613b18565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613c8281613506565b82525050565b60038110613c9957613c986135f7565b5b50565b6000819050613caa82613c88565b919050565b6000613cba82613c9c565b9050919050565b613cca81613caf565b82525050565b604082016000820151613ce66000850182613c79565b506020820151613cf96020850182613cc1565b50505050565b6000613d0b8383613cd0565b60408301905092915050565b6000602082019050919050565b6000613d2f82613c4d565b613d398185613c58565b9350613d4483613c69565b8060005b83811015613d75578151613d5c8882613cff565b9750613d6783613d17565b925050600181019050613d48565b5085935050505092915050565b60006020820190508181036000830152613d9c8184613d24565b905092915050565b600080600080600060a08688031215613dc057613dbf6134fc565b5b6000613dce88828901613914565b9550506020613ddf888289016136ca565b9450506040613df08882890161352a565b935050606086013567ffffffffffffffff811115613e1157613e10613501565b5b613e1d88828901613897565b9250506080613e2e8882890161352a565b9150509295509295909350565b600060208284031215613e5157613e506134fc565b5b6000613e5f84828501613819565b91505092915050565b600082825260208201905092915050565b7f54686520616d6f756e742070726f706f736564206973206e6f742076616c696460008201527f2100000000000000000000000000000000000000000000000000000000000000602082015250565b6000613ed5602183613e68565b9150613ee082613e79565b604082019050919050565b60006020820190508181036000830152613f0481613ec8565b9050919050565b7f5468652067616d652069732077616974696e6720666f7220796f757220626f6160008201527f72642120596f752063616e2774207265706f7274206e6f772e00000000000000602082015250565b6000613f67603983613e68565b9150613f7282613f0b565b604082019050919050565b60006020820190508181036000830152613f9681613f5a565b9050919050565b7f497420697320796f7572207475726e2120596f752063616e2774207265706f7260008201527f74206e6f772e0000000000000000000000000000000000000000000000000000602082015250565b6000613ff9602683613e68565b915061400482613f9d565b604082019050919050565b6000602082019050818103600083015261402881613fec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614069826134be565b9150614074836134be565b925082820190508082111561408c5761408b61402f565b5b92915050565b600061409d82613506565b91506140a883613506565b9250828201905060ff8111156140c1576140c061402f565b5b92915050565b60006140d2826134be565b91506140dd836134be565b92508282039050818111156140f5576140f461402f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600061416482613506565b915060ff82036141775761417661402f565b5b600182019050919050565b7f546869732067616d65206973206e6f7420617661696c61626c65210000000000600082015250565b60006141b8601b83613e68565b91506141c382614182565b602082019050919050565b600060208201905081810360008301526141e7816141ab565b9050919050565b7f596f75206861766520616c72656164792073686f7420746861742063656c6c00600082015250565b6000614224601f83613e68565b915061422f826141ee565b602082019050919050565b6000602082019050818103600083015261425381614217565b9050919050565b7f5468652073686f7420697320696e76616c696420666f7220746865206375727260008201527f656e74206d61702073697a652100000000000000000000000000000000000000602082015250565b60006142b6602d83613e68565b91506142c18261425a565b604082019050919050565b600060208201905081810360008301526142e5816142a9565b9050919050565b60006142f7826134be565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036143295761432861402f565b5b600182019050919050565b61433d816138f1565b82525050565b60006060820190506143586000830186614334565b61436560208301856134c8565b6143726040830184613689565b949350505050565b6000819050919050565b614395614390826137f8565b61437a565b82525050565b60006143a78284614384565b60208201915081905092915050565b7f4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f6600600082015250565b60006143ec601f83613e68565b91506143f7826143b6565b602082019050919050565b6000602082019050818103600083015261441b816143df565b905091905056fea26469706673582212201265ba1914543b5e77d7cd4eef423cfc0af94f6045e8d6030a3d34d59bcfaf3864736f6c63430008130033a2646970667358221220cc2a11e4c694ee17c320b03f50aecc51140018d5feeee2657600640b38b42b4964736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7711:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:3",
                "type": ""
              }
            ],
            "src": "466:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "626:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "636:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "665:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "647:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "636:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "608:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "618:7:3",
                "type": ""
              }
            ],
            "src": "568:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "739:92:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "821:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "762:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "800:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Game_$1778",
                              "nodeType": "YulIdentifier",
                              "src": "769:30:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "769:37:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "759:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "759:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:56:3"
                  },
                  "nodeType": "YulIf",
                  "src": "749:76:3"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "732:5:3",
                "type": ""
              }
            ],
            "src": "683:148:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:100:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "912:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "921:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "912:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "990:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Game_$1778",
                      "nodeType": "YulIdentifier",
                      "src": "950:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:46:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:46:3"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "880:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "888:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "896:5:3",
                "type": ""
              }
            ],
            "src": "837:165:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1087:276:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1133:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1135:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1135:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1135:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1108:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1117:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1104:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1129:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1100:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1097:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1226:130:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1241:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1245:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1270:76:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1318:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1329:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1314:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1314:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1338:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Game_$1778",
                          "nodeType": "YulIdentifier",
                          "src": "1280:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1280:66:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1270:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Game_$1778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1068:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1080:6:3",
                "type": ""
              }
            ],
            "src": "1008:355:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1411:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1421:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1446:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1439:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1432:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1421:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1393:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1403:7:3",
                "type": ""
              }
            ],
            "src": "1369:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:76:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1559:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1568:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1571:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1561:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1561:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1561:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1528:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1550:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "1535:14:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1535:21:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1525:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1525:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:40:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1515:60:3"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1498:5:3",
                "type": ""
              }
            ],
            "src": "1465:116:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1636:84:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1646:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1668:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1655:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1646:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1708:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1684:23:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1684:30:3"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1614:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1622:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1630:5:3",
                "type": ""
              }
            ],
            "src": "1587:133:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:260:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1835:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1837:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1837:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1837:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1810:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1819:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1806:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1806:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1831:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1802:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1799:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1928:114:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1943:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1957:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1947:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1972:60:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2004:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2015:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2000:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2000:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2024:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1982:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:50:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1972:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1759:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1770:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1782:6:3",
                "type": ""
              }
            ],
            "src": "1726:323:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2098:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2155:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2164:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2167:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2157:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2157:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2157:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2121:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2146:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2128:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2128:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2118:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2108:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2091:5:3",
                "type": ""
              }
            ],
            "src": "2055:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2246:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2256:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2271:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2265:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2265:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2256:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2314:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2287:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2287:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2287:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2224:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2232:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2240:5:3",
                "type": ""
              }
            ],
            "src": "2183:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2409:274:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2455:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2457:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2457:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2457:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2430:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2439:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2426:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2451:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2422:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2419:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2548:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2563:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2577:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2567:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2592:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2638:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2649:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2634:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2634:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2658:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2602:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2602:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2592:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2379:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2390:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2402:6:3",
                "type": ""
              }
            ],
            "src": "2332:351:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2754:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2771:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2794:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2776:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2764:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2764:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2764:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2742:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2749:3:3",
                "type": ""
              }
            ],
            "src": "2689:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2911:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2921:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2933:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2944:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2929:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2921:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3001:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3014:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3025:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3010:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3010:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2957:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2957:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2957:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2883:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2895:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2906:4:3",
                "type": ""
              }
            ],
            "src": "2813:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3086:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3096:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3107:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3096:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3068:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3078:7:3",
                "type": ""
              }
            ],
            "src": "3041:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3152:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3169:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3172:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3162:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3162:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3162:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3259:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3259:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3259:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3290:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3293:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3283:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3283:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3124:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3355:149:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3365:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3388:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3370:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3365:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3399:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3422:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3404:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3404:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3399:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3433:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3445:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3448:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3441:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3441:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3433:4:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3475:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3477:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3477:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3477:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "3466:4:3"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3472:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3463:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:11:3"
                  },
                  "nodeType": "YulIf",
                  "src": "3460:37:3"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3341:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3344:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3350:4:3",
                "type": ""
              }
            ],
            "src": "3310:194:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3555:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3565:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3576:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3565:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3537:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3547:7:3",
                "type": ""
              }
            ],
            "src": "3510:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3640:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3650:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3661:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "3650:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3622:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "3632:7:3",
                "type": ""
              }
            ],
            "src": "3593:79:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3761:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3778:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3821:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "3803:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3803:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3783:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3783:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3771:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3771:58:3"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3749:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3756:3:3",
                "type": ""
              }
            ],
            "src": "3678:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3883:52:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3893:35:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3918:2:3",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3922:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "3914:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3914:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "3893:8:3"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3864:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "3874:8:3",
                "type": ""
              }
            ],
            "src": "3841:94:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3988:47:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3998:31:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4023:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "4009:13:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "3998:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3970:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "3980:7:3",
                "type": ""
              }
            ],
            "src": "3941:94:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4088:53:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4098:37:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4129:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4109:19:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:26:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "4098:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4070:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "4080:7:3",
                "type": ""
              }
            ],
            "src": "4041:100:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4230:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4247:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4290:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4272:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4272:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4252:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4252:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4240:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4240:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4240:58:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4218:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4225:3:3",
                "type": ""
              }
            ],
            "src": "4147:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4357:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4367:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4378:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "4367:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4339:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "4349:7:3",
                "type": ""
              }
            ],
            "src": "4310:79:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4478:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4495:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4538:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4520:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4520:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4500:19:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4500:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4488:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4488:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4488:58:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4466:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4473:3:3",
                "type": ""
              }
            ],
            "src": "4395:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4730:366:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4803:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4812:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4741:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4741:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4741:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4825:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4836:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4841:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4832:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4832:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4825:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4916:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4925:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4854:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4854:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4854:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4938:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4949:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4954:2:3",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4945:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4945:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4938:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5029:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5038:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4967:61:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4967:75:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4967:75:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5051:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5062:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5067:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5058:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5051:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5080:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5087:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5080:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4693:3:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4699:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4707:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4715:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4726:3:3",
                "type": ""
              }
            ],
            "src": "4558:538:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5130:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5147:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5150:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5140:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5140:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5244:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5247:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5237:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5237:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5268:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5271:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5261:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5261:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5261:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "5102:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5322:142:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5332:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5355:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5337:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5332:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5366:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5389:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5371:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5371:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5366:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5413:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "5415:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5415:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5415:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5410:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5403:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5403:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5400:35:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5444:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5453:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5456:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "5449:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "5444:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5311:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5314:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "5320:1:3",
                "type": ""
              }
            ],
            "src": "5288:176:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5513:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5523:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5523:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5646:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5648:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5648:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5648:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5571:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5578:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5568:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5568:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5565:103:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5677:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5688:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5695:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5684:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5684:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5677:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5499:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5509:3:3",
                "type": ""
              }
            ],
            "src": "5470:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5737:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5754:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5757:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5747:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5747:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5747:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5851:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5854:4:3",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5844:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5844:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5844:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5875:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5878:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5868:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5868:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5868:15:3"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5709:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5954:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5971:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5991:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5976:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5976:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5964:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5964:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5964:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5942:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5949:3:3",
                "type": ""
              }
            ],
            "src": "5895:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6130:200:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6140:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6152:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6163:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6148:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6148:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6140:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6220:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6244:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6176:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6176:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6176:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6295:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6308:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6319:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6304:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6304:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6257:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6257:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6257:66:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6094:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6106:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6114:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6125:4:3",
                "type": ""
              }
            ],
            "src": "6010:320:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6368:28:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6378:12:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6385:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6378:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6354:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6364:3:3",
                "type": ""
              }
            ],
            "src": "6336:60:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6462:82:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6472:66:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6530:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "6512:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6512:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "6503:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6485:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6485:53:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6472:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6442:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6452:9:3",
                "type": ""
              }
            ],
            "src": "6402:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6610:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6620:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6664:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6633:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6620:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6590:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6600:9:3",
                "type": ""
              }
            ],
            "src": "6550:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6755:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6765:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6809:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6778:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6778:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6765:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Game_$1778_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6735:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6745:9:3",
                "type": ""
              }
            ],
            "src": "6682:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6905:79:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6922:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6971:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Game_$1778_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6927:43:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6927:50:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6915:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6915:63:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6915:63:3"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Game_$1778_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6893:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6900:3:3",
                "type": ""
              }
            ],
            "src": "6827:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7123:213:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7133:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7145:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7156:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7141:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7141:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7133:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7226:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7239:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7250:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7235:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7235:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Game_$1778_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7169:56:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:84:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7169:84:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7301:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7314:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7325:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7310:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7310:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7263:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7263:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7263:66:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Game_$1778_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7087:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7099:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7107:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7118:4:3",
                "type": ""
              }
            ],
            "src": "6990:346:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7370:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7387:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7390:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7380:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7380:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7380:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7484:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7487:4:3",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7477:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7477:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7477:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7508:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7501:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7501:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7501:15:3"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "7342:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7556:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7573:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7576:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7566:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7566:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7566:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7670:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7673:4:3",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7663:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7663:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7663:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7694:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7687:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7687:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7687:15:3"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "7528:180:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Game_$1778(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Game_$1778(value) {\n        if iszero(eq(value, cleanup_t_contract$_Game_$1778(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Game_$1778(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Game_$1778(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Game_$1778(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Game_$1778(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_address_t_uint256__to_t_bytes32_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Game_$1778_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Game_$1778_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Game_$1778_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Game_$1778_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_Game_$1778_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "87:4211:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "87:4211:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:573;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2087:1218;;;:::i;:::-;;1134:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1508:573;1660:16;:23;1677:5;1660:23;;;;;;;;;;;;;;;;;;;;;;;;;1659:24;:55;;;;1701:5;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1687:27;;:10;:27;;;1659:55;1655:135;;;1748:10;1735:24;;;;;;;;;;;;1773:7;;1655:135;1843:5;:15;;;1859:10;1843:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:18;1949:5;1937:11;:18::i;:::-;2068:5;2047:27;;2056:10;2047:27;;;;;;;;;;;;1508:573;;:::o;2087:1218::-;2160:1;2137:13;:20;;;;:24;2133:98;;;2189:10;2182:18;;;;;;;;;;;;2214:7;;2133:98;2310:14;2466:13;:20;;;;2417:1;2402:12;:16;;;;:::i;:::-;2392:27;2421:10;2433:5;;2375:64;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2348:105;;;;;;2327:136;;:159;;;;:::i;:::-;2310:176;;2525:5;;:7;;;;;;;;;:::i;:::-;;;;;;2613:10;2646:9;2658:6;2646:18;;2641:613;2670:13;:20;;;;2666:1;:24;2641:613;;;2711:9;2723:13;2742;:20;;;;2738:1;:24;;;;:::i;:::-;2723:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2711:53;;2851:10;2835:26;;:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;2831:413;;2889:4;2881:12;;2959:4;:14;;;2974:10;2959:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:17;3076:4;3064:11;:17::i;:::-;3201:4;3180:26;;3189:10;3180:26;;;;;;;;;;;;3224:5;;;2831:413;2697:557;2692:3;;;;;:::i;:::-;;;;2641:613;;;;3268:5;3263:35;;3287:10;3280:18;;;;;;;;;;;;3263:35;2122:1183;;2087:1218;:::o;1134:303::-;1215:12;1239:10;1251:6;1230:28;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1215:43;;1294:17;1303:7;1294:8;:17::i;:::-;1402:10;1394:36;;;1414:7;1423:6;1394:36;;;;;;;:::i;:::-;;;;;;;;1176:261;1134:303;:::o;3420:640::-;3506:4;3479:31;;:16;:23;3496:5;3479:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;3472:39;;;;:::i;:::-;;3551:1;3528:13;:20;;;;:24;3521:32;;;;:::i;:::-;;3570:16;:23;3587:5;3570:23;;;;;;;;;;;;;;;;3563:30;;;;;;;;;;;3604:13;3620:20;:27;3641:5;3620:27;;;;;;;;;;;;;;;;3604:43;;3735:1;3711:13;:20;;;;:25;:62;;;;3772:1;3749:13;:20;;;;:24;;;;:::i;:::-;3740:5;:33;3711:62;3707:302;;;3789:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3707:302;;;3862:13;3899:1;3876:13;:20;;;;:24;;;;:::i;:::-;3862:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3839:13;3853:5;3839:20;;;;;;;;:::i;:::-;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;3915:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:5;3948:20;:42;3969:13;3983:5;3969:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3948:42;;;;;;;;;;;;;;;:50;;;;3707:302;4026:20;:27;4047:5;4026:27;;;;;;;;;;;;;;;4019:34;;;3462:598;3420:640;:::o;4111:185::-;4186:4;4160:16;:23;4177:5;4160:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4200:13;4219:5;4200:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4288:1;4265:13;:20;;;;:24;;;;:::i;:::-;4235:20;:27;4256:5;4235:27;;;;;;;;;;;;;;;:54;;;;4111:185;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:165::-;896:5;934:6;921:20;912:29;;950:46;990:5;950:46;:::i;:::-;837:165;;;;:::o;1008:355::-;1080:6;1129:2;1117:9;1108:7;1104:23;1100:32;1097:119;;;1135:79;;:::i;:::-;1097:119;1255:1;1280:66;1338:7;1329:6;1318:9;1314:22;1280:66;:::i;:::-;1270:76;;1226:130;1008:355;;;;:::o;1369:90::-;1403:7;1446:5;1439:13;1432:21;1421:32;;1369:90;;;:::o;1465:116::-;1535:21;1550:5;1535:21;:::i;:::-;1528:5;1525:32;1515:60;;1571:1;1568;1561:12;1515:60;1465:116;:::o;1587:133::-;1630:5;1668:6;1655:20;1646:29;;1684:30;1708:5;1684:30;:::i;:::-;1587:133;;;;:::o;1726:323::-;1782:6;1831:2;1819:9;1810:7;1806:23;1802:32;1799:119;;;1837:79;;:::i;:::-;1799:119;1957:1;1982:50;2024:7;2015:6;2004:9;2000:22;1982:50;:::i;:::-;1972:60;;1928:114;1726:323;;;;:::o;2055:122::-;2128:24;2146:5;2128:24;:::i;:::-;2121:5;2118:35;2108:63;;2167:1;2164;2157:12;2108:63;2055:122;:::o;2183:143::-;2240:5;2271:6;2265:13;2256:22;;2287:33;2314:5;2287:33;:::i;:::-;2183:143;;;;:::o;2332:351::-;2402:6;2451:2;2439:9;2430:7;2426:23;2422:32;2419:119;;;2457:79;;:::i;:::-;2419:119;2577:1;2602:64;2658:7;2649:6;2638:9;2634:22;2602:64;:::i;:::-;2592:74;;2548:128;2332:351;;;;:::o;2689:118::-;2776:24;2794:5;2776:24;:::i;:::-;2771:3;2764:37;2689:118;;:::o;2813:222::-;2906:4;2944:2;2933:9;2929:18;2921:26;;2957:71;3025:1;3014:9;3010:17;3001:6;2957:71;:::i;:::-;2813:222;;;;:::o;3041:77::-;3078:7;3107:5;3096:16;;3041:77;;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:194;3350:4;3370:20;3388:1;3370:20;:::i;:::-;3365:25;;3404:20;3422:1;3404:20;:::i;:::-;3399:25;;3448:1;3445;3441:9;3433:17;;3472:1;3466:4;3463:11;3460:37;;;3477:18;;:::i;:::-;3460:37;3310:194;;;;:::o;3510:77::-;3547:7;3576:5;3565:16;;3510:77;;;:::o;3593:79::-;3632:7;3661:5;3650:16;;3593:79;;;:::o;3678:157::-;3783:45;3803:24;3821:5;3803:24;:::i;:::-;3783:45;:::i;:::-;3778:3;3771:58;3678:157;;:::o;3841:94::-;3874:8;3922:5;3918:2;3914:14;3893:35;;3841:94;;;:::o;3941:::-;3980:7;4009:20;4023:5;4009:20;:::i;:::-;3998:31;;3941:94;;;:::o;4041:100::-;4080:7;4109:26;4129:5;4109:26;:::i;:::-;4098:37;;4041:100;;;:::o;4147:157::-;4252:45;4272:24;4290:5;4272:24;:::i;:::-;4252:45;:::i;:::-;4247:3;4240:58;4147:157;;:::o;4310:79::-;4349:7;4378:5;4367:16;;4310:79;;;:::o;4395:157::-;4500:45;4520:24;4538:5;4520:24;:::i;:::-;4500:45;:::i;:::-;4495:3;4488:58;4395:157;;:::o;4558:538::-;4726:3;4741:75;4812:3;4803:6;4741:75;:::i;:::-;4841:2;4836:3;4832:12;4825:19;;4854:75;4925:3;4916:6;4854:75;:::i;:::-;4954:2;4949:3;4945:12;4938:19;;4967:75;5038:3;5029:6;4967:75;:::i;:::-;5067:2;5062:3;5058:12;5051:19;;5087:3;5080:10;;4558:538;;;;;;:::o;5102:180::-;5150:77;5147:1;5140:88;5247:4;5244:1;5237:15;5271:4;5268:1;5261:15;5288:176;5320:1;5337:20;5355:1;5337:20;:::i;:::-;5332:25;;5371:20;5389:1;5371:20;:::i;:::-;5366:25;;5410:1;5400:35;;5415:18;;:::i;:::-;5400:35;5456:1;5453;5449:9;5444:14;;5288:176;;;;:::o;5470:233::-;5509:3;5532:24;5550:5;5532:24;:::i;:::-;5523:33;;5578:66;5571:5;5568:77;5565:103;;5648:18;;:::i;:::-;5565:103;5695:1;5688:5;5684:13;5677:20;;5470:233;;;:::o;5709:180::-;5757:77;5754:1;5747:88;5854:4;5851:1;5844:15;5878:4;5875:1;5868:15;5895:109;5976:21;5991:5;5976:21;:::i;:::-;5971:3;5964:34;5895:109;;:::o;6010:320::-;6125:4;6163:2;6152:9;6148:18;6140:26;;6176:71;6244:1;6233:9;6229:17;6220:6;6176:71;:::i;:::-;6257:66;6319:2;6308:9;6304:18;6295:6;6257:66;:::i;:::-;6010:320;;;;;:::o;6336:60::-;6364:3;6385:5;6378:12;;6336:60;;;:::o;6402:142::-;6452:9;6485:53;6503:34;6512:24;6530:5;6512:24;:::i;:::-;6503:34;:::i;:::-;6485:53;:::i;:::-;6472:66;;6402:142;;;:::o;6550:126::-;6600:9;6633:37;6664:5;6633:37;:::i;:::-;6620:50;;6550:126;;;:::o;6682:139::-;6745:9;6778:37;6809:5;6778:37;:::i;:::-;6765:50;;6682:139;;;:::o;6827:157::-;6927:50;6971:5;6927:50;:::i;:::-;6922:3;6915:63;6827:157;;:::o;6990:346::-;7118:4;7156:2;7145:9;7141:18;7133:26;;7169:84;7250:1;7239:9;7235:17;7226:6;7169:84;:::i;:::-;7263:66;7325:2;7314:9;7310:18;7301:6;7263:66;:::i;:::-;6990:346;;;;;:::o;7342:180::-;7390:77;7387:1;7380:88;7487:4;7484:1;7477:15;7511:4;7508:1;7501:15;7528:180;7576:77;7573:1;7566:88;7673:4;7670:1;7663:15;7697:4;7694:1;7687:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./Game.sol\";\n\ncontract GamesManager {\n    // Maps Games that are joinable.\n    mapping(Game => bool) private joinableGamesMap;\n\n    // Addresses of the Games that are joinable.\n    Game[] private joinableGames;\n\n    // Mapping that keeps index of the joinable games.\n    mapping(Game => uint256) private joinableGamesIndexes;\n\n    // Nonce used for pseudo-random number generation.\n    uint256 private nonce;\n\n    ////////////\n    ///EVENTS///\n    ////////////\n\n    // Event emitted when a new game is created.\n    event NewGame(address indexed creator, Game game, bool small);\n\n    // Event emitted when a player joins a game.\n    event JoinGame(address indexed player, Game indexed game);\n\n    // Event emitted when player fails to join a random game.\n    event NoGame(address indexed player);\n\n    // Event emittend when player tries to join a not valid game. \n    event GameNotValid(address indexed player);\n\n    ///////////////\n    ////PUBLIC/////\n    ///FUNCTIONS///\n    ///////////////\n\n    // Function used to create a new game and select the size.\n    function createGame(bool _small) external {\n        // Create a new game\n        Game newGame = new Game(msg.sender, _small);\n\n        // Add the game.\n        _addGame(newGame);\n\n        // Emit event to inform client about the new game address.\n        emit NewGame(msg.sender, newGame, _small);\n    }\n\n    // Function used to join a pre-existing game knowing the ID.\n    function joinGameByID(Game _game) external {\n\n        // If the game is not in the joinableGame list or the player tries to double access.\n        if (!joinableGamesMap[_game] || msg.sender == _game.owner()) {\n            emit GameNotValid(msg.sender);\n            return;\n        }\n\n        // Register the the second player.\n        _game.matchJoin(msg.sender);\n\n        // Delete the game from the joinable game list.\n        _removeGame(_game);\n\n        // Emit event to inform that the second player has joined the game.\n        emit JoinGame(msg.sender, _game);\n    }\n\n    function joinRandomGame() external {\n\n        if (joinableGames.length < 1) {\n            emit NoGame(msg.sender);\n            return;\n        }\n\n        // Generate a random index to access the joinable game list.\n        uint256 random = uint256(\n            keccak256(\n                abi.encodePacked(blockhash(block.number - 1), msg.sender, nonce)\n            )\n        ) % joinableGames.length;\n\n        // Increment nonce.\n        nonce++;\n\n        // Iterating the list we select the first suitable game that.\n        bool found = false;\n        for (uint256 i = random; i < joinableGames.length; i++) {\n            Game game = joinableGames[(i % joinableGames.length)];\n\n            // Check if the condition is respected.\n            if (game.owner() != msg.sender) {\n                found = true;\n\n                // Register the second player.\n                game.matchJoin(msg.sender);\n\n                // Remove game from the joinable game list.\n                _removeGame(game);\n\n                // Emit event to inform the sender about the game address.\n                emit JoinGame(msg.sender, game);\n                break;\n            }\n        }\n        if (!found) emit NoGame(msg.sender);\n    }\n\n    /////////////\n    ///HELPERS///\n    /////////////\n\n    // removal of a game from the joinable game list.\n    function _removeGame(Game _game) internal {\n        assert(joinableGamesMap[_game] == true);\n        assert(joinableGames.length > 0);\n        delete joinableGamesMap[_game];\n\n        uint256 index = joinableGamesIndexes[_game];\n\n        // Update the joinable games index list.\n        if (joinableGames.length == 1 || index == joinableGames.length - 1) {\n            joinableGames.pop();\n        } else {\n            joinableGames[index] = joinableGames[joinableGames.length - 1];\n            joinableGames.pop();\n            joinableGamesIndexes[joinableGames[index]] = index;\n        }\n\n        delete joinableGamesIndexes[_game];\n    }\n\n    // Add a game to the joinable game list.\n    function _addGame(Game _game) internal {\n        joinableGamesMap[_game] = true;\n        joinableGames.push(_game);\n        joinableGamesIndexes[_game] = joinableGames.length - 1;\n    }\n}\n",
  "sourcePath": "/home/azk/Desktop/eth-merkletree-battleship/backend/contracts/GamesManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/GamesManager.sol",
    "exportedSymbols": {
      "Game": [
        1778
      ],
      "GamesManager": [
        2113
      ],
      "MerkleProof": [
        527
      ]
    },
    "id": 2114,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1780,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "project:/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2114,
        "sourceUnit": 1779,
        "src": "65:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GamesManager",
        "contractDependencies": [
          1778
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2113,
        "linearizedBaseContracts": [
          2113
        ],
        "name": "GamesManager",
        "nameLocation": "96:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1786,
            "mutability": "mutable",
            "name": "joinableGamesMap",
            "nameLocation": "182:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 2113,
            "src": "152:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
              "typeString": "mapping(contract Game => bool)"
            },
            "typeName": {
              "id": 1785,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1783,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1782,
                  "name": "Game",
                  "nameLocations": [
                    "160:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "160:4:2"
                },
                "referencedDeclaration": 1778,
                "src": "160:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1778",
                  "typeString": "contract Game"
                }
              },
              "nodeType": "Mapping",
              "src": "152:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                "typeString": "mapping(contract Game => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1784,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "168:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1790,
            "mutability": "mutable",
            "name": "joinableGames",
            "nameLocation": "269:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 2113,
            "src": "254:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
              "typeString": "contract Game[]"
            },
            "typeName": {
              "baseType": {
                "id": 1788,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1787,
                  "name": "Game",
                  "nameLocations": [
                    "254:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "254:4:2"
                },
                "referencedDeclaration": 1778,
                "src": "254:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1778",
                  "typeString": "contract Game"
                }
              },
              "id": 1789,
              "nodeType": "ArrayTypeName",
              "src": "254:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage_ptr",
                "typeString": "contract Game[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1795,
            "mutability": "mutable",
            "name": "joinableGamesIndexes",
            "nameLocation": "377:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 2113,
            "src": "344:53:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
              "typeString": "mapping(contract Game => uint256)"
            },
            "typeName": {
              "id": 1794,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1792,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1791,
                  "name": "Game",
                  "nameLocations": [
                    "352:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1778,
                  "src": "352:4:2"
                },
                "referencedDeclaration": 1778,
                "src": "352:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Game_$1778",
                  "typeString": "contract Game"
                }
              },
              "nodeType": "Mapping",
              "src": "344:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                "typeString": "mapping(contract Game => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1793,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "360:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1797,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "475:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 2113,
            "src": "459:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1798,
              "nodeType": "StructuredDocumentation",
              "src": "504:12:2",
              "text": "EVENTS///"
            },
            "eventSelector": "43ec5ca1a093170b11baf659159a896405b0393d8c5ce4a63c8dd450e2af0e5b",
            "id": 1807,
            "name": "NewGame",
            "nameLocation": "594:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1800,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "618:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "602:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1803,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "game",
                  "nameLocation": "632:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "627:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1801,
                      "name": "Game",
                      "nameLocations": [
                        "627:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "627:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "627:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1805,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "small",
                  "nameLocation": "643:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1807,
                  "src": "638:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "601:48:2"
            },
            "src": "588:62:2"
          },
          {
            "anonymous": false,
            "eventSelector": "07b29210dc1c79e9a69cc69e470ffe66a4cac664f90d5aae30dc519c5c78e53e",
            "id": 1814,
            "name": "JoinGame",
            "nameLocation": "711:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1809,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "736:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1814,
                  "src": "720:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "game",
                  "nameLocation": "757:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1814,
                  "src": "744:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1810,
                      "name": "Game",
                      "nameLocations": [
                        "744:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "744:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "744:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:43:2"
            },
            "src": "705:58:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e2fe41c4bd195a4573c815ce24df9bdab82f85913f56314cd3225ce056ffb383",
            "id": 1818,
            "name": "NoGame",
            "nameLocation": "837:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "860:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1818,
                  "src": "844:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:24:2"
            },
            "src": "831:37:2"
          },
          {
            "anonymous": false,
            "eventSelector": "22223a77da257b62f2941c518a42d60b12781dbeaf07d25bfcdd00e1227732df",
            "id": 1822,
            "name": "GameNotValid",
            "nameLocation": "947:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1820,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "976:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "960:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "959:24:2"
            },
            "src": "941:43:2"
          },
          {
            "body": {
              "id": 1850,
              "nodeType": "Block",
              "src": "1176:261:2",
              "statements": [
                {
                  "assignments": [
                    1830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1830,
                      "mutability": "mutable",
                      "name": "newGame",
                      "nameLocation": "1220:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1850,
                      "src": "1215:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1778",
                        "typeString": "contract Game"
                      },
                      "typeName": {
                        "id": 1829,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1828,
                          "name": "Game",
                          "nameLocations": [
                            "1215:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1778,
                          "src": "1215:4:2"
                        },
                        "referencedDeclaration": 1778,
                        "src": "1215:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1838,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1239:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1243:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1239:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1836,
                        "name": "_small",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1251:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1230:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bool_$returns$_t_contract$_Game_$1778_$",
                        "typeString": "function (address,bool) returns (contract Game)"
                      },
                      "typeName": {
                        "id": 1832,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1831,
                          "name": "Game",
                          "nameLocations": [
                            "1234:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1778,
                          "src": "1234:4:2"
                        },
                        "referencedDeclaration": 1778,
                        "src": "1234:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1215:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1840,
                        "name": "newGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "1303:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1839,
                      "name": "_addGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2112,
                      "src": "1294:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1778_$returns$__$",
                        "typeString": "function (contract Game)"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:17:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1844,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1402:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1406:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1402:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1846,
                        "name": "newGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "1414:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      {
                        "id": 1847,
                        "name": "_small",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1423:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1843,
                      "name": "NewGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "1394:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1778_$_t_bool_$returns$__$",
                        "typeString": "function (address,contract Game,bool)"
                      }
                    },
                    "id": 1848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1394:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1849,
                  "nodeType": "EmitStatement",
                  "src": "1389:41:2"
                }
              ]
            },
            "documentation": {
              "id": 1823,
              "nodeType": "StructuredDocumentation",
              "src": "1030:15:2",
              "text": "FUNCTIONS///"
            },
            "functionSelector": "a35203c4",
            "id": 1851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createGame",
            "nameLocation": "1143:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1825,
                  "mutability": "mutable",
                  "name": "_small",
                  "nameLocation": "1159:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "1154:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1824,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:13:2"
            },
            "returnParameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:0:2"
            },
            "scope": 2113,
            "src": "1134:303:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1893,
              "nodeType": "Block",
              "src": "1551:530:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1659:24:2",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1857,
                          "name": "joinableGamesMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1786,
                          "src": "1660:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                            "typeString": "mapping(contract Game => bool)"
                          }
                        },
                        "id": 1859,
                        "indexExpression": {
                          "id": 1858,
                          "name": "_game",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1854,
                          "src": "1677:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1778",
                            "typeString": "contract Game"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1660:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1861,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1687:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1691:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1687:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1863,
                            "name": "_game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "1701:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1707:5:2",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 581,
                          "src": "1701:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1701:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1687:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1659:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1875,
                  "nodeType": "IfStatement",
                  "src": "1655:135:2",
                  "trueBody": {
                    "id": 1874,
                    "nodeType": "Block",
                    "src": "1716:74:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1869,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1748:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1752:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1748:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1868,
                            "name": "GameNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "1735:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1735:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1872,
                        "nodeType": "EmitStatement",
                        "src": "1730:29:2"
                      },
                      {
                        "functionReturnParameters": 1856,
                        "id": 1873,
                        "nodeType": "Return",
                        "src": "1773:7:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1879,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1859:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1863:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1859:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1876,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "1843:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "id": 1878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1849:9:2",
                      "memberName": "matchJoin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "1843:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1884,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "1949:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1883,
                      "name": "_removeGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2084,
                      "src": "1937:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1778_$returns$__$",
                        "typeString": "function (contract Game)"
                      }
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:18:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1888,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2056:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2060:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2056:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1890,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "2068:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "id": 1887,
                      "name": "JoinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1814,
                      "src": "2047:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1778_$returns$__$",
                        "typeString": "function (address,contract Game)"
                      }
                    },
                    "id": 1891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1892,
                  "nodeType": "EmitStatement",
                  "src": "2042:32:2"
                }
              ]
            },
            "functionSelector": "2123bffc",
            "id": 1894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinGameByID",
            "nameLocation": "1517:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "1535:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1894,
                  "src": "1530:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 1853,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1852,
                      "name": "Game",
                      "nameLocations": [
                        "1530:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "1530:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "1530:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1529:12:2"
            },
            "returnParameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:0:2"
            },
            "scope": 2113,
            "src": "1508:573:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "2122:1183:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1897,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "2137:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2151:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2137:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2160:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2137:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1908,
                  "nodeType": "IfStatement",
                  "src": "2133:98:2",
                  "trueBody": {
                    "id": 1907,
                    "nodeType": "Block",
                    "src": "2163:68:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1902,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2189:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2193:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2189:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1901,
                            "name": "NoGame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1818,
                            "src": "2182:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2182:18:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1905,
                        "nodeType": "EmitStatement",
                        "src": "2177:23:2"
                      },
                      {
                        "functionReturnParameters": 1896,
                        "id": 1906,
                        "nodeType": "Return",
                        "src": "2214:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1910,
                      "mutability": "mutable",
                      "name": "random",
                      "nameLocation": "2318:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2001,
                      "src": "2310:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1909,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2310:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1931,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1920,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1917,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "2402:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1918,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2408:6:2",
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "2402:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1919,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2417:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2402:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1916,
                                    "name": "blockhash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967291,
                                    "src": "2392:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 1921,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2392:27:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1922,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2421:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1923,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2425:6:2",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2421:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1924,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1797,
                                  "src": "2433:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1914,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2375:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2379:12:2",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2375:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2375:64:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1913,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "2348:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2348:105:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2327:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2327:136:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 1928,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "2466:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2480:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2466:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2327:159:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2310:176:2"
                },
                {
                  "expression": {
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2525:7:2",
                    "subExpression": {
                      "id": 1932,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1797,
                      "src": "2525:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:7:2"
                },
                {
                  "assignments": [
                    1936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1936,
                      "mutability": "mutable",
                      "name": "found",
                      "nameLocation": "2618:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2001,
                      "src": "2613:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1935,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2613:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1938,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2626:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2613:18:2"
                },
                {
                  "body": {
                    "id": 1991,
                    "nodeType": "Block",
                    "src": "2697:557:2",
                    "statements": [
                      {
                        "assignments": [
                          1952
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1952,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "2716:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1991,
                            "src": "2711:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            },
                            "typeName": {
                              "id": 1951,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1950,
                                "name": "Game",
                                "nameLocations": [
                                  "2711:4:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1778,
                                "src": "2711:4:2"
                              },
                              "referencedDeclaration": 1778,
                              "src": "2711:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1778",
                                "typeString": "contract Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1960,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1953,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "2723:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 1959,
                          "indexExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1954,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1940,
                                  "src": "2738:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1955,
                                    "name": "joinableGames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1790,
                                    "src": "2742:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                      "typeString": "contract Game[] storage ref"
                                    }
                                  },
                                  "id": 1956,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2756:6:2",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2742:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2738:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1958,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2737:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2723:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1778",
                            "typeString": "contract Game"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2711:53:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1961,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1952,
                                "src": "2835:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Game_$1778",
                                  "typeString": "contract Game"
                                }
                              },
                              "id": 1962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2840:5:2",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 581,
                              "src": "2835:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2835:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1964,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2851:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2855:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2851:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2835:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1990,
                        "nodeType": "IfStatement",
                        "src": "2831:413:2",
                        "trueBody": {
                          "id": 1989,
                          "nodeType": "Block",
                          "src": "2863:381:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1967,
                                  "name": "found",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1936,
                                  "src": "2881:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2889:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2881:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1970,
                              "nodeType": "ExpressionStatement",
                              "src": "2881:12:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1974,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2974:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2978:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2974:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1971,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1952,
                                    "src": "2959:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  },
                                  "id": 1973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2964:9:2",
                                  "memberName": "matchJoin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 942,
                                  "src": "2959:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 1976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2959:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1977,
                              "nodeType": "ExpressionStatement",
                              "src": "2959:26:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1979,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1952,
                                    "src": "3076:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  ],
                                  "id": 1978,
                                  "name": "_removeGame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2084,
                                  "src": "3064:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Game_$1778_$returns$__$",
                                    "typeString": "function (contract Game)"
                                  }
                                },
                                "id": 1980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3064:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1981,
                              "nodeType": "ExpressionStatement",
                              "src": "3064:17:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1983,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3189:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3193:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3189:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1985,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1952,
                                    "src": "3201:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_Game_$1778",
                                      "typeString": "contract Game"
                                    }
                                  ],
                                  "id": 1982,
                                  "name": "JoinGame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1814,
                                  "src": "3180:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Game_$1778_$returns$__$",
                                    "typeString": "function (address,contract Game)"
                                  }
                                },
                                "id": 1986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3180:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1987,
                              "nodeType": "EmitStatement",
                              "src": "3175:31:2"
                            },
                            {
                              "id": 1988,
                              "nodeType": "Break",
                              "src": "3224:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1943,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1940,
                      "src": "2666:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1944,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "2670:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 1945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2684:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2670:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2666:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1992,
                  "initializationExpression": {
                    "assignments": [
                      1940
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1940,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2654:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "2646:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2646:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1942,
                    "initialValue": {
                      "id": 1941,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "2658:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2646:18:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2692:3:2",
                      "subExpression": {
                        "id": 1947,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "2692:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1949,
                    "nodeType": "ExpressionStatement",
                    "src": "2692:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2641:613:2"
                },
                {
                  "condition": {
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3267:6:2",
                    "subExpression": {
                      "id": 1993,
                      "name": "found",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "3268:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2000,
                  "nodeType": "IfStatement",
                  "src": "3263:35:2",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1996,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3287:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3291:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3287:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1995,
                        "name": "NoGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "3280:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3280:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1999,
                    "nodeType": "EmitStatement",
                    "src": "3275:23:2"
                  }
                }
              ]
            },
            "functionSelector": "342ca184",
            "id": 2002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinRandomGame",
            "nameLocation": "2096:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:2:2"
            },
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:0:2"
            },
            "scope": 2113,
            "src": "2087:1218:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2083,
              "nodeType": "Block",
              "src": "3462:598:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2010,
                            "name": "joinableGamesMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "3479:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                              "typeString": "mapping(contract Game => bool)"
                            }
                          },
                          "id": 2012,
                          "indexExpression": {
                            "id": 2011,
                            "name": "_game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "3496:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3479:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3506:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3479:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2009,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3472:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2016,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2018,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "3528:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 2019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3542:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3528:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3551:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3528:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2017,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3521:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:32:2"
                },
                {
                  "expression": {
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3563:30:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2024,
                        "name": "joinableGamesMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "3570:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                          "typeString": "mapping(contract Game => bool)"
                        }
                      },
                      "id": 2026,
                      "indexExpression": {
                        "id": 2025,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2006,
                        "src": "3587:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3570:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:30:2"
                },
                {
                  "assignments": [
                    2030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "3612:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2083,
                      "src": "3604:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2029,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3604:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2034,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2031,
                      "name": "joinableGamesIndexes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1795,
                      "src": "3620:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                        "typeString": "mapping(contract Game => uint256)"
                      }
                    },
                    "id": 2033,
                    "indexExpression": {
                      "id": 2032,
                      "name": "_game",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2006,
                      "src": "3641:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Game_$1778",
                        "typeString": "contract Game"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3620:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3604:43:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2035,
                          "name": "joinableGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1790,
                          "src": "3711:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                            "typeString": "contract Game[] storage ref"
                          }
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3725:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3711:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3735:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3711:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2039,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "3740:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2040,
                            "name": "joinableGames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "3749:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                              "typeString": "contract Game[] storage ref"
                            }
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3763:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3749:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3772:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3749:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3740:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3711:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2076,
                    "nodeType": "Block",
                    "src": "3825:184:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2052,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3839:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2054,
                            "indexExpression": {
                              "id": 2053,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2030,
                              "src": "3853:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3839:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2055,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3862:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2060,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2056,
                                  "name": "joinableGames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1790,
                                  "src": "3876:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                    "typeString": "contract Game[] storage ref"
                                  }
                                },
                                "id": 2057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3890:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3876:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3899:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3876:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3862:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Game_$1778",
                              "typeString": "contract Game"
                            }
                          },
                          "src": "3839:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Game_$1778",
                            "typeString": "contract Game"
                          }
                        },
                        "id": 2062,
                        "nodeType": "ExpressionStatement",
                        "src": "3839:62:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2063,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3915:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3929:3:2",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3915:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$",
                              "typeString": "function (contract Game[] storage pointer)"
                            }
                          },
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3915:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2067,
                        "nodeType": "ExpressionStatement",
                        "src": "3915:19:2"
                      },
                      {
                        "expression": {
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2068,
                              "name": "joinableGamesIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1795,
                              "src": "3948:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                                "typeString": "mapping(contract Game => uint256)"
                              }
                            },
                            "id": 2072,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2069,
                                "name": "joinableGames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1790,
                                "src": "3969:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                  "typeString": "contract Game[] storage ref"
                                }
                              },
                              "id": 2071,
                              "indexExpression": {
                                "id": 2070,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2030,
                                "src": "3983:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3969:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Game_$1778",
                                "typeString": "contract Game"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3948:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2073,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "3993:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3948:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2075,
                        "nodeType": "ExpressionStatement",
                        "src": "3948:50:2"
                      }
                    ]
                  },
                  "id": 2077,
                  "nodeType": "IfStatement",
                  "src": "3707:302:2",
                  "trueBody": {
                    "id": 2051,
                    "nodeType": "Block",
                    "src": "3775:44:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2046,
                              "name": "joinableGames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "3789:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                                "typeString": "contract Game[] storage ref"
                              }
                            },
                            "id": 2048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3803:3:2",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3789:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$",
                              "typeString": "function (contract Game[] storage pointer)"
                            }
                          },
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3789:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2050,
                        "nodeType": "ExpressionStatement",
                        "src": "3789:19:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4019:34:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2078,
                        "name": "joinableGamesIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "4026:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                          "typeString": "mapping(contract Game => uint256)"
                        }
                      },
                      "id": 2080,
                      "indexExpression": {
                        "id": 2079,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2006,
                        "src": "4047:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4026:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2082,
                  "nodeType": "ExpressionStatement",
                  "src": "4019:34:2"
                }
              ]
            },
            "documentation": {
              "id": 2003,
              "nodeType": "StructuredDocumentation",
              "src": "3329:13:2",
              "text": "HELPERS///"
            },
            "id": 2084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeGame",
            "nameLocation": "3429:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "3446:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "3441:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 2005,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2004,
                      "name": "Game",
                      "nameLocations": [
                        "3441:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "3441:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "3441:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3440:12:2"
            },
            "returnParameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:0:2"
            },
            "scope": 2113,
            "src": "3420:640:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2111,
              "nodeType": "Block",
              "src": "4150:146:2",
              "statements": [
                {
                  "expression": {
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2090,
                        "name": "joinableGamesMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "4160:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_bool_$",
                          "typeString": "mapping(contract Game => bool)"
                        }
                      },
                      "id": 2092,
                      "indexExpression": {
                        "id": 2091,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2087,
                        "src": "4177:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4160:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4186:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4160:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2095,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2099,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2087,
                        "src": "4219:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      ],
                      "expression": {
                        "id": 2096,
                        "name": "joinableGames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "4200:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                          "typeString": "contract Game[] storage ref"
                        }
                      },
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4214:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4200:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$_t_contract$_Game_$1778_$returns$__$attached_to$_t_array$_t_contract$_Game_$1778_$dyn_storage_ptr_$",
                        "typeString": "function (contract Game[] storage pointer,contract Game)"
                      }
                    },
                    "id": 2100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4200:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2101,
                  "nodeType": "ExpressionStatement",
                  "src": "4200:25:2"
                },
                {
                  "expression": {
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2102,
                        "name": "joinableGamesIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "4235:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Game_$1778_$_t_uint256_$",
                          "typeString": "mapping(contract Game => uint256)"
                        }
                      },
                      "id": 2104,
                      "indexExpression": {
                        "id": 2103,
                        "name": "_game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2087,
                        "src": "4256:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Game_$1778",
                          "typeString": "contract Game"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4235:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2105,
                          "name": "joinableGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1790,
                          "src": "4265:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Game_$1778_$dyn_storage",
                            "typeString": "contract Game[] storage ref"
                          }
                        },
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4279:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4265:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4288:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4265:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4235:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "4235:54:2"
                }
              ]
            },
            "id": 2112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addGame",
            "nameLocation": "4120:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "_game",
                  "nameLocation": "4134:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "4129:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Game_$1778",
                    "typeString": "contract Game"
                  },
                  "typeName": {
                    "id": 2086,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2085,
                      "name": "Game",
                      "nameLocations": [
                        "4129:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1778,
                      "src": "4129:4:2"
                    },
                    "referencedDeclaration": 1778,
                    "src": "4129:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Game_$1778",
                      "typeString": "contract Game"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4128:12:2"
            },
            "returnParameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4150:0:2"
            },
            "scope": 2113,
            "src": "4111:185:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2114,
        "src": "87:4211:2",
        "usedErrors": []
      }
    ],
    "src": "32:4267:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1688914673370": {
      "events": {},
      "links": {},
      "address": "0x10f100f36Db6a8Fa12Af0cC59fC9FB26c92F3f42",
      "transactionHash": "0xae2100d1b1c8cd1a1d211f01eb8dde84cedede96788d3adf02136b1f3f61dcfc"
    },
    "1688974547411": {
      "events": {},
      "links": {},
      "address": "0xFE6d8e42462696A8Fc7c73d37102cB1851e3C857",
      "transactionHash": "0x14de64a0890b06c959f61e9080dc710e885b3e2712c8bcf6247ec4541034ae2c"
    },
    "1688980805014": {
      "events": {},
      "links": {},
      "address": "0xf866fF8aDe06c565e688B61CCc4ad3C3CF5fAB08",
      "transactionHash": "0x787dbec0757907c350746686dde45847eea2ed543854a816952845d89feb2728"
    },
    "1689000522686": {
      "events": {},
      "links": {},
      "address": "0x3FbD748B6a7c46369f5aC98f3135BcB469DCec30",
      "transactionHash": "0x483acdd9cfc6725d228697b62f3e871f55209ed26974328bc3573803101126e4"
    },
    "1689017842762": {
      "events": {},
      "links": {},
      "address": "0x3F6a11Cf4A4f379DE115Adbe0d2292F2CC722758",
      "transactionHash": "0xcd76e811b6740b9b656ef398c09f70aaaf21fcfff6ebff5b6ffc511e13ebd8c5"
    },
    "1689028406002": {
      "events": {},
      "links": {},
      "address": "0x0e4a23c1273ad81e33e301dF6BFF2e833A98Ce4a",
      "transactionHash": "0x3353a4e278dfa8889104117f8289d0fd2673810308d1d1dab2c1030bf4b5a9a6"
    },
    "1689057727468": {
      "events": {},
      "links": {},
      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
      "transactionHash": "0x36be102049528212acee0bb12974a2a8323709e22b26183aedfa3460babe7d06"
    },
    "1689065551941": {
      "events": {},
      "links": {},
      "address": "0xDf3Cf8b9978c9c5639E06da3bfF5014ab5c055d1",
      "transactionHash": "0x616d12d8cb2fa52990b580279b5eda64f847b16d7c0d9d30fa4079a30707167b"
    },
    "1689066337655": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x953f9411518c973a64e4027bd87694857336366e7c2d23cab1edd6734547dc01"
    },
    "1689066515736": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x953f9411518c973a64e4027bd87694857336366e7c2d23cab1edd6734547dc01"
    },
    "1689066735824": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x953f9411518c973a64e4027bd87694857336366e7c2d23cab1edd6734547dc01"
    },
    "1689067699439": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x0bb40e45c11001be7fe111b41c43fe74ff5c0a5b3ac263f9b95cfec4fa044568"
    },
    "1689067841969": {
      "events": {},
      "links": {},
      "address": "0xaD888d0Ade988EbEe74B8D4F39BF29a8d0fe8A8D",
      "transactionHash": "0xd7d694b5cd186f1583c1833df5edef91c36d60da9c27b2ffa2cb49f7b847cf14"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-07-11T09:32:19.629Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewGame(address,address,bool)": {
        "notice": "EVENTS///"
      }
    },
    "kind": "user",
    "methods": {
      "createGame(bool)": {
        "notice": "FUNCTIONS///"
      }
    },
    "version": 1
  }
}